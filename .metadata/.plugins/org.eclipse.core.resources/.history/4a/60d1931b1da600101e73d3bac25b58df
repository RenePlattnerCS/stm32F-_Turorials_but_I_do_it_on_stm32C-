#include "adxl345.h"



char data;
uint8_t data_vals[6];

#define MULTI_BYTE_EN		0x40

void adxl_read_address(uint8_t address)
{

}

void adxl_write(uint8_t address, uint8_t value)
{
	uint8_t data[2];
	//enable multi byte , place address into buffer
	data[0] = address | MULTI_BYTE_EN;
	data[1] = value;

	//pull cs low
	cs_enable();

	//transmit data
	spi1_transmit(data,2);

	//pull cs high
	cs_disable();

}

void adxl_read_values(uint8_t address)
{

}


void adxl_init(void)
{
	//enable SPI GPIO
	spi_gpio_init();
	//config SPI
	spi1_config();
	//read DIVID => returns 0xE5 => device is OK
	adxl_read_address(DEVID_R);
	// set data format to +/- 4g
	adxl_write(DATA_FORMAT_R, FOUR_G);
	//reset all bits
	adxl_write(POWER_CTL_R, RESET);
	//configure power mode
	adxl_write(POWER_CTL_R, SET_MEASURE_BIT);


}
