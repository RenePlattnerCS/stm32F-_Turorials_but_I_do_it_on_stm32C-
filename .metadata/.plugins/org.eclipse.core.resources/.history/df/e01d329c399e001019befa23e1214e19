#include "stm32C0xx.h"


#define TIM1EN			(1U << 11)
#define CR1_CEN			(1U << 0)

#define OC_TOGGLE			(1U<<4) | (1U<<5)
#define CCER_OC_CC1E		(1U<<0)

#define GPIOAEN		(1U<<0)

#define PIN5		(1U<<5)

#define AFR5_TIM1_CH1		(1U<<22) | (1U<<20)

void tim1_1hz_init(void)
{
	//enable clock to timer 1
	RCC->APBENR2 |= TIM1EN;
	//set prescaler
	TIM1->PSC = 1600 - 1;

	// set auto reaload
	TIM1->ARR = 10000 -1;

	//clear counter
	TIM1->CNT = 0;
	//enable timer


	TIM1->CR1 = CR1_CEN;

}


void tim1_output_compare(void)
{

	RCC->IOPENR |= GPIOAEN;
	//PA5 to AF moder
	GPIOA->MODER &= ~(3U << (5*2));  // clear mode
	GPIOA->MODER |=  (2U << (5*2));  // alternate function
	//GPIOA->MODER &= ~(1U << 10);
	//GPIOA->MODER |= (1U << 11);
	GPIOA->AFR[0] &= ~(0xFU << (5*4));
	GPIOA->AFR[0] |=  (2U  << (5*4)); // AF2 = TIM1_CH1

	//set PA5 to alternate function mode 5
	//GPIOA->AFR[0] |= AFR5_TIM1_CH1;

	//enable clock to timer 1
	RCC->APBENR2 |= TIM1EN;

	//set prescaler
	TIM1->PSC = 1600 - 1;


	// set auto reaload
	TIM1->ARR = 10000 -1;


	//set output compare to toggle mode
	TIM1->CCMR1 = OC_TOGGLE;

	//enable tim1 ch1 in compare mode
	TIM1->CCER |= CCER_OC_CC1E;




	//clear counter
	TIM1->CNT = 0;
	//enable compare mode


	TIM1->CR1 = CR1_CEN;

}
