#define PERIPH_BASE       0x40000000UL
#define AHB2PERIPH_BASE   (PERIPH_BASE + 0x10000000UL)
#define GPIOA_BASE        (AHB2PERIPH_BASE + 0x0000UL)


#define RCC_BASE          (PERIPH_BASE + 0x00021000UL)

#define RCC_IOPENR        (*(volatile unsigned int *)(RCC_BASE + 0x34))
#define GPIOA_MODER       (*(volatile unsigned int *)(GPIOA_BASE + 0x00))
#define GPIOA_ODR         (*(volatile unsigned int *)(GPIOA_BASE + 0x14))


#define GPIOAEN 			(1U << 0)

#define PIN5				(1U << 5)
#define LED_PIN				PIN5


#define __IO volatile

typedef struct {
	__IO uint32_t CR;
	__IO uint32_t ICSCR;
	__IO uint32_t CFGR;
	__IO uint32_t Reserved;
	__IO uint32_t Reserved;
	__IO uint32_t Reserved;
	__IO uint32_t CIER;
	__IO uint32_t CIFR;
	__IO uint32_t CICR;
	__IO uint32_t IOPRSTR;
	__IO uint32_t AHBRSTR;
	__IO uint32_t APBRSTR1;
	__IO uint32_t APBRSTR2;
	__IO uint32_t IOPENR;
	__IO uint32_t AHBENR;
	__IO uint32_t APBENR1;
	__IO uint32_t APBENR2;
	__IO uint32_t IOPSMENR;
	__IO uint32_t AHBSMENR;
	__IO uint32_t APBSMENR1;

} RCC_TypeDef;

typedef struct {
	__IO uint32_t MODER;
	__IO uint32_t OTYPER;
	__IO uint32_t OSPEEDR;
	__IO uint32_t PUPDR;
	__IO uint32_t IDR;
	__IO uint32_t ODR;
	__IO uint32_t BSRR;
	__IO uint32_t LCKR;
	__IO uint32_t AFR[2];
	__IO uint32_t BRR;


} GPIO_TypeDef;


#define RCC		((RCC_TypeDef*) RCC_BASE)
#define GPIOA	((GPIO_TypeDef *) GPIOA_BASE)

int main(void)
{
    // 1. Enable clock for GPIOA (bit 0 in RCC_IOPENR)
	RCC_IOPENR |= GPIOAEN;
	GPIOA_MODER  |= (1U << 10);
	GPIOA_MODER  &= ~(1U << 11);


	while(1){
		GPIOA_ODR ^= LED_PIN;
		for(int i=0;i<400000;i++){};
	}
}
