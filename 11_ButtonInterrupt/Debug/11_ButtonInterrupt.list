
11_ButtonInterrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000025c  080000b4  080000b4  000010b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000310  08000318  00001318  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000310  08000310  00001318  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000310  08000310  00001318  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000310  08000318  00001318  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000310  08000310  00001310  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000314  08000314  00001314  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001318  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000318  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000318  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00001318  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000923  00000000  00000000  00001340  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000027c  00000000  00000000  00001c63  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000078  00000000  00000000  00001ee0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000004c  00000000  00000000  00001f58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000dc2  00000000  00000000  00001fa4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000dde  00000000  00000000  00002d66  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003fd01  00000000  00000000  00003b44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00043845  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000c0  00000000  00000000  00043888  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000059  00000000  00000000  00043948  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b4 <__do_global_dtors_aux>:
 80000b4:	b510      	push	{r4, lr}
 80000b6:	4c06      	ldr	r4, [pc, #24]	@ (80000d0 <__do_global_dtors_aux+0x1c>)
 80000b8:	7823      	ldrb	r3, [r4, #0]
 80000ba:	2b00      	cmp	r3, #0
 80000bc:	d107      	bne.n	80000ce <__do_global_dtors_aux+0x1a>
 80000be:	4b05      	ldr	r3, [pc, #20]	@ (80000d4 <__do_global_dtors_aux+0x20>)
 80000c0:	2b00      	cmp	r3, #0
 80000c2:	d002      	beq.n	80000ca <__do_global_dtors_aux+0x16>
 80000c4:	4804      	ldr	r0, [pc, #16]	@ (80000d8 <__do_global_dtors_aux+0x24>)
 80000c6:	e000      	b.n	80000ca <__do_global_dtors_aux+0x16>
 80000c8:	bf00      	nop
 80000ca:	2301      	movs	r3, #1
 80000cc:	7023      	strb	r3, [r4, #0]
 80000ce:	bd10      	pop	{r4, pc}
 80000d0:	20000000 	.word	0x20000000
 80000d4:	00000000 	.word	0x00000000
 80000d8:	080002f8 	.word	0x080002f8

080000dc <frame_dummy>:
 80000dc:	4b04      	ldr	r3, [pc, #16]	@ (80000f0 <frame_dummy+0x14>)
 80000de:	b510      	push	{r4, lr}
 80000e0:	2b00      	cmp	r3, #0
 80000e2:	d003      	beq.n	80000ec <frame_dummy+0x10>
 80000e4:	4903      	ldr	r1, [pc, #12]	@ (80000f4 <frame_dummy+0x18>)
 80000e6:	4804      	ldr	r0, [pc, #16]	@ (80000f8 <frame_dummy+0x1c>)
 80000e8:	e000      	b.n	80000ec <frame_dummy+0x10>
 80000ea:	bf00      	nop
 80000ec:	bd10      	pop	{r4, pc}
 80000ee:	46c0      	nop			@ (mov r8, r8)
 80000f0:	00000000 	.word	0x00000000
 80000f4:	20000004 	.word	0x20000004
 80000f8:	080002f8 	.word	0x080002f8

080000fc <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80000fc:	b580      	push	{r7, lr}
 80000fe:	b082      	sub	sp, #8
 8000100:	af00      	add	r7, sp, #0
 8000102:	0002      	movs	r2, r0
 8000104:	1dfb      	adds	r3, r7, #7
 8000106:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8000108:	1dfb      	adds	r3, r7, #7
 800010a:	781b      	ldrb	r3, [r3, #0]
 800010c:	2b7f      	cmp	r3, #127	@ 0x7f
 800010e:	d809      	bhi.n	8000124 <__NVIC_EnableIRQ+0x28>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000110:	1dfb      	adds	r3, r7, #7
 8000112:	781b      	ldrb	r3, [r3, #0]
 8000114:	001a      	movs	r2, r3
 8000116:	231f      	movs	r3, #31
 8000118:	401a      	ands	r2, r3
 800011a:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__NVIC_EnableIRQ+0x30>)
 800011c:	2101      	movs	r1, #1
 800011e:	4091      	lsls	r1, r2
 8000120:	000a      	movs	r2, r1
 8000122:	601a      	str	r2, [r3, #0]
    __COMPILER_BARRIER();
  }
}
 8000124:	46c0      	nop			@ (mov r8, r8)
 8000126:	46bd      	mov	sp, r7
 8000128:	b002      	add	sp, #8
 800012a:	bd80      	pop	{r7, pc}
 800012c:	e000e100 	.word	0xe000e100

08000130 <pc13_exti_init>:
#define GPIOCEN		(1U<<2)
#define SYSCFGEN	(1U<<0)


void pc13_exti_init(void)
{
 8000130:	b580      	push	{r7, lr}
 8000132:	af00      	add	r7, sp, #0
    RCC->IOPENR |= (1U << 2);             // Enable GPIOC
 8000134:	4b25      	ldr	r3, [pc, #148]	@ (80001cc <pc13_exti_init+0x9c>)
 8000136:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000138:	4b24      	ldr	r3, [pc, #144]	@ (80001cc <pc13_exti_init+0x9c>)
 800013a:	2104      	movs	r1, #4
 800013c:	430a      	orrs	r2, r1
 800013e:	635a      	str	r2, [r3, #52]	@ 0x34
    GPIOC->MODER &= ~(3U << (13 * 2));    // PC13 input
 8000140:	4b23      	ldr	r3, [pc, #140]	@ (80001d0 <pc13_exti_init+0xa0>)
 8000142:	681a      	ldr	r2, [r3, #0]
 8000144:	4b22      	ldr	r3, [pc, #136]	@ (80001d0 <pc13_exti_init+0xa0>)
 8000146:	4923      	ldr	r1, [pc, #140]	@ (80001d4 <pc13_exti_init+0xa4>)
 8000148:	400a      	ands	r2, r1
 800014a:	601a      	str	r2, [r3, #0]
    GPIOC->PUPDR &= ~(3U << (13 * 2));    // Pull-up
 800014c:	4b20      	ldr	r3, [pc, #128]	@ (80001d0 <pc13_exti_init+0xa0>)
 800014e:	68da      	ldr	r2, [r3, #12]
 8000150:	4b1f      	ldr	r3, [pc, #124]	@ (80001d0 <pc13_exti_init+0xa0>)
 8000152:	4920      	ldr	r1, [pc, #128]	@ (80001d4 <pc13_exti_init+0xa4>)
 8000154:	400a      	ands	r2, r1
 8000156:	60da      	str	r2, [r3, #12]
    GPIOC->PUPDR |=  (1U << (13 * 2));
 8000158:	4b1d      	ldr	r3, [pc, #116]	@ (80001d0 <pc13_exti_init+0xa0>)
 800015a:	68da      	ldr	r2, [r3, #12]
 800015c:	4b1c      	ldr	r3, [pc, #112]	@ (80001d0 <pc13_exti_init+0xa0>)
 800015e:	2180      	movs	r1, #128	@ 0x80
 8000160:	04c9      	lsls	r1, r1, #19
 8000162:	430a      	orrs	r2, r1
 8000164:	60da      	str	r2, [r3, #12]

    RCC->APBENR2 |= (1U << 0);  // Enable SYSCFG clock
 8000166:	4b19      	ldr	r3, [pc, #100]	@ (80001cc <pc13_exti_init+0x9c>)
 8000168:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800016a:	4b18      	ldr	r3, [pc, #96]	@ (80001cc <pc13_exti_init+0x9c>)
 800016c:	2101      	movs	r1, #1
 800016e:	430a      	orrs	r2, r1
 8000170:	641a      	str	r2, [r3, #64]	@ 0x40

    // Map EXTI13 to Port C
    EXTI->EXTICR[3] &= ~(0xFFU << 8);  // Clear bits for line 13
 8000172:	4b19      	ldr	r3, [pc, #100]	@ (80001d8 <pc13_exti_init+0xa8>)
 8000174:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 8000176:	4b18      	ldr	r3, [pc, #96]	@ (80001d8 <pc13_exti_init+0xa8>)
 8000178:	4918      	ldr	r1, [pc, #96]	@ (80001dc <pc13_exti_init+0xac>)
 800017a:	400a      	ands	r2, r1
 800017c:	66da      	str	r2, [r3, #108]	@ 0x6c
    EXTI->EXTICR[3] |= (0x2U << 8);    // Set to port C (0x2)
 800017e:	4b16      	ldr	r3, [pc, #88]	@ (80001d8 <pc13_exti_init+0xa8>)
 8000180:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 8000182:	4b15      	ldr	r3, [pc, #84]	@ (80001d8 <pc13_exti_init+0xa8>)
 8000184:	2180      	movs	r1, #128	@ 0x80
 8000186:	0089      	lsls	r1, r1, #2
 8000188:	430a      	orrs	r2, r1
 800018a:	66da      	str	r2, [r3, #108]	@ 0x6c

    // Clear pending flag
    EXTI->RPR1 = LINE13;
 800018c:	4b12      	ldr	r3, [pc, #72]	@ (80001d8 <pc13_exti_init+0xa8>)
 800018e:	2280      	movs	r2, #128	@ 0x80
 8000190:	0192      	lsls	r2, r2, #6
 8000192:	60da      	str	r2, [r3, #12]

    // Falling edge trigger
    EXTI->FTSR1 |= LINE13;
 8000194:	4b10      	ldr	r3, [pc, #64]	@ (80001d8 <pc13_exti_init+0xa8>)
 8000196:	685a      	ldr	r2, [r3, #4]
 8000198:	4b0f      	ldr	r3, [pc, #60]	@ (80001d8 <pc13_exti_init+0xa8>)
 800019a:	2180      	movs	r1, #128	@ 0x80
 800019c:	0189      	lsls	r1, r1, #6
 800019e:	430a      	orrs	r2, r1
 80001a0:	605a      	str	r2, [r3, #4]
    EXTI->RTSR1 &= ~LINE13;
 80001a2:	4b0d      	ldr	r3, [pc, #52]	@ (80001d8 <pc13_exti_init+0xa8>)
 80001a4:	681a      	ldr	r2, [r3, #0]
 80001a6:	4b0c      	ldr	r3, [pc, #48]	@ (80001d8 <pc13_exti_init+0xa8>)
 80001a8:	490d      	ldr	r1, [pc, #52]	@ (80001e0 <pc13_exti_init+0xb0>)
 80001aa:	400a      	ands	r2, r1
 80001ac:	601a      	str	r2, [r3, #0]

    // Unmask line
    EXTI->IMR1 |= LINE13;
 80001ae:	4a0a      	ldr	r2, [pc, #40]	@ (80001d8 <pc13_exti_init+0xa8>)
 80001b0:	2380      	movs	r3, #128	@ 0x80
 80001b2:	58d3      	ldr	r3, [r2, r3]
 80001b4:	4908      	ldr	r1, [pc, #32]	@ (80001d8 <pc13_exti_init+0xa8>)
 80001b6:	2280      	movs	r2, #128	@ 0x80
 80001b8:	0192      	lsls	r2, r2, #6
 80001ba:	4313      	orrs	r3, r2
 80001bc:	2280      	movs	r2, #128	@ 0x80
 80001be:	508b      	str	r3, [r1, r2]

    // Enable NVIC
    NVIC_EnableIRQ(EXTI4_15_IRQn);
 80001c0:	2007      	movs	r0, #7
 80001c2:	f7ff ff9b 	bl	80000fc <__NVIC_EnableIRQ>

}
 80001c6:	46c0      	nop			@ (mov r8, r8)
 80001c8:	46bd      	mov	sp, r7
 80001ca:	bd80      	pop	{r7, pc}
 80001cc:	40021000 	.word	0x40021000
 80001d0:	50000800 	.word	0x50000800
 80001d4:	f3ffffff 	.word	0xf3ffffff
 80001d8:	40021800 	.word	0x40021800
 80001dc:	ffff00ff 	.word	0xffff00ff
 80001e0:	ffffdfff 	.word	0xffffdfff

080001e4 <main>:
#define BTN_PIN		PIN13



int main(void)
{
 80001e4:	b580      	push	{r7, lr}
 80001e6:	af00      	add	r7, sp, #0

	RCC->IOPENR |= (1U << 0);             // Enable GPIOA
 80001e8:	4b0d      	ldr	r3, [pc, #52]	@ (8000220 <main+0x3c>)
 80001ea:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80001ec:	4b0c      	ldr	r3, [pc, #48]	@ (8000220 <main+0x3c>)
 80001ee:	2101      	movs	r1, #1
 80001f0:	430a      	orrs	r2, r1
 80001f2:	635a      	str	r2, [r3, #52]	@ 0x34
	GPIOA->MODER &= ~(3U << (5 * 2));     // PA5 output
 80001f4:	23a0      	movs	r3, #160	@ 0xa0
 80001f6:	05db      	lsls	r3, r3, #23
 80001f8:	681a      	ldr	r2, [r3, #0]
 80001fa:	23a0      	movs	r3, #160	@ 0xa0
 80001fc:	05db      	lsls	r3, r3, #23
 80001fe:	4909      	ldr	r1, [pc, #36]	@ (8000224 <main+0x40>)
 8000200:	400a      	ands	r2, r1
 8000202:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |=  (1U << (5 * 2));
 8000204:	23a0      	movs	r3, #160	@ 0xa0
 8000206:	05db      	lsls	r3, r3, #23
 8000208:	681a      	ldr	r2, [r3, #0]
 800020a:	23a0      	movs	r3, #160	@ 0xa0
 800020c:	05db      	lsls	r3, r3, #23
 800020e:	2180      	movs	r1, #128	@ 0x80
 8000210:	00c9      	lsls	r1, r1, #3
 8000212:	430a      	orrs	r2, r1
 8000214:	601a      	str	r2, [r3, #0]

	pc13_exti_init();
 8000216:	f7ff ff8b 	bl	8000130 <pc13_exti_init>


	while(1)
 800021a:	46c0      	nop			@ (mov r8, r8)
 800021c:	e7fd      	b.n	800021a <main+0x36>
 800021e:	46c0      	nop			@ (mov r8, r8)
 8000220:	40021000 	.word	0x40021000
 8000224:	fffff3ff 	.word	0xfffff3ff

08000228 <EXTI4_15_IRQHandler>:




void EXTI4_15_IRQHandler(void)
{
 8000228:	b580      	push	{r7, lr}
 800022a:	af00      	add	r7, sp, #0
    if (EXTI->FPR1 & LINE13)
 800022c:	4b0a      	ldr	r3, [pc, #40]	@ (8000258 <EXTI4_15_IRQHandler+0x30>)
 800022e:	691a      	ldr	r2, [r3, #16]
 8000230:	2380      	movs	r3, #128	@ 0x80
 8000232:	019b      	lsls	r3, r3, #6
 8000234:	4013      	ands	r3, r2
 8000236:	d00b      	beq.n	8000250 <EXTI4_15_IRQHandler+0x28>
    {
        EXTI->FPR1 = LINE13;        // clear pending
 8000238:	4b07      	ldr	r3, [pc, #28]	@ (8000258 <EXTI4_15_IRQHandler+0x30>)
 800023a:	2280      	movs	r2, #128	@ 0x80
 800023c:	0192      	lsls	r2, r2, #6
 800023e:	611a      	str	r2, [r3, #16]
        GPIOA->ODR ^= (1U << 5);    // toggle LED
 8000240:	23a0      	movs	r3, #160	@ 0xa0
 8000242:	05db      	lsls	r3, r3, #23
 8000244:	695a      	ldr	r2, [r3, #20]
 8000246:	23a0      	movs	r3, #160	@ 0xa0
 8000248:	05db      	lsls	r3, r3, #23
 800024a:	2120      	movs	r1, #32
 800024c:	404a      	eors	r2, r1
 800024e:	615a      	str	r2, [r3, #20]
    }
}
 8000250:	46c0      	nop			@ (mov r8, r8)
 8000252:	46bd      	mov	sp, r7
 8000254:	bd80      	pop	{r7, pc}
 8000256:	46c0      	nop			@ (mov r8, r8)
 8000258:	40021800 	.word	0x40021800

0800025c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800025c:	480d      	ldr	r0, [pc, #52]	@ (8000294 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800025e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000260:	e000      	b.n	8000264 <Reset_Handler+0x8>
 8000262:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000264:	480c      	ldr	r0, [pc, #48]	@ (8000298 <LoopForever+0x6>)
  ldr r1, =_edata
 8000266:	490d      	ldr	r1, [pc, #52]	@ (800029c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000268:	4a0d      	ldr	r2, [pc, #52]	@ (80002a0 <LoopForever+0xe>)
  movs r3, #0
 800026a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800026c:	e002      	b.n	8000274 <LoopCopyDataInit>

0800026e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800026e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000270:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000272:	3304      	adds	r3, #4

08000274 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000274:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000276:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000278:	d3f9      	bcc.n	800026e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800027a:	4a0a      	ldr	r2, [pc, #40]	@ (80002a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800027c:	4c0a      	ldr	r4, [pc, #40]	@ (80002a8 <LoopForever+0x16>)
  movs r3, #0
 800027e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000280:	e001      	b.n	8000286 <LoopFillZerobss>

08000282 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000282:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000284:	3204      	adds	r2, #4

08000286 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000286:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000288:	d3fb      	bcc.n	8000282 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 800028a:	f000 f811 	bl	80002b0 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 800028e:	f7ff ffa9 	bl	80001e4 <main>

08000292 <LoopForever>:

LoopForever:
  b LoopForever
 8000292:	e7fe      	b.n	8000292 <LoopForever>
  ldr   r0, =_estack
 8000294:	20003000 	.word	0x20003000
  ldr r0, =_sdata
 8000298:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800029c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002a0:	08000318 	.word	0x08000318
  ldr r2, =_sbss
 80002a4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a8:	2000001c 	.word	0x2000001c

080002ac <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002ac:	e7fe      	b.n	80002ac <ADC_IRQHandler>
	...

080002b0 <__libc_init_array>:
 80002b0:	b570      	push	{r4, r5, r6, lr}
 80002b2:	2600      	movs	r6, #0
 80002b4:	4c0c      	ldr	r4, [pc, #48]	@ (80002e8 <__libc_init_array+0x38>)
 80002b6:	4d0d      	ldr	r5, [pc, #52]	@ (80002ec <__libc_init_array+0x3c>)
 80002b8:	1b64      	subs	r4, r4, r5
 80002ba:	10a4      	asrs	r4, r4, #2
 80002bc:	42a6      	cmp	r6, r4
 80002be:	d109      	bne.n	80002d4 <__libc_init_array+0x24>
 80002c0:	2600      	movs	r6, #0
 80002c2:	f000 f819 	bl	80002f8 <_init>
 80002c6:	4c0a      	ldr	r4, [pc, #40]	@ (80002f0 <__libc_init_array+0x40>)
 80002c8:	4d0a      	ldr	r5, [pc, #40]	@ (80002f4 <__libc_init_array+0x44>)
 80002ca:	1b64      	subs	r4, r4, r5
 80002cc:	10a4      	asrs	r4, r4, #2
 80002ce:	42a6      	cmp	r6, r4
 80002d0:	d105      	bne.n	80002de <__libc_init_array+0x2e>
 80002d2:	bd70      	pop	{r4, r5, r6, pc}
 80002d4:	00b3      	lsls	r3, r6, #2
 80002d6:	58eb      	ldr	r3, [r5, r3]
 80002d8:	4798      	blx	r3
 80002da:	3601      	adds	r6, #1
 80002dc:	e7ee      	b.n	80002bc <__libc_init_array+0xc>
 80002de:	00b3      	lsls	r3, r6, #2
 80002e0:	58eb      	ldr	r3, [r5, r3]
 80002e2:	4798      	blx	r3
 80002e4:	3601      	adds	r6, #1
 80002e6:	e7f2      	b.n	80002ce <__libc_init_array+0x1e>
 80002e8:	08000310 	.word	0x08000310
 80002ec:	08000310 	.word	0x08000310
 80002f0:	08000314 	.word	0x08000314
 80002f4:	08000310 	.word	0x08000310

080002f8 <_init>:
 80002f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002fa:	46c0      	nop			@ (mov r8, r8)
 80002fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002fe:	bc08      	pop	{r3}
 8000300:	469e      	mov	lr, r3
 8000302:	4770      	bx	lr

08000304 <_fini>:
 8000304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000306:	46c0      	nop			@ (mov r8, r8)
 8000308:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800030a:	bc08      	pop	{r3}
 800030c:	469e      	mov	lr, r3
 800030e:	4770      	bx	lr
