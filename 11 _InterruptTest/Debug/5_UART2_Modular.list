
5_UART2_Modular.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001334  080000b4  080000b4  000010b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000003c  080013e8  080013e8  000023e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001424  08001424  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08001424  08001424  0000305c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08001424  08001424  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001424  08001424  00002424  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001428  08001428  00002428  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  0800142c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001488  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001488  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000cf2  00000000  00000000  00003084  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000470  00000000  00000000  00003d76  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000150  00000000  00000000  000041e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000e4  00000000  00000000  00004338  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000c9fd  00000000  00000000  0000441c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001def  00000000  00000000  00010e19  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00041cce  00000000  00000000  00012c08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000548d6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b28  00000000  00000000  0005491c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004d  00000000  00000000  00055444  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b4 <__do_global_dtors_aux>:
 80000b4:	b510      	push	{r4, lr}
 80000b6:	4c06      	ldr	r4, [pc, #24]	@ (80000d0 <__do_global_dtors_aux+0x1c>)
 80000b8:	7823      	ldrb	r3, [r4, #0]
 80000ba:	2b00      	cmp	r3, #0
 80000bc:	d107      	bne.n	80000ce <__do_global_dtors_aux+0x1a>
 80000be:	4b05      	ldr	r3, [pc, #20]	@ (80000d4 <__do_global_dtors_aux+0x20>)
 80000c0:	2b00      	cmp	r3, #0
 80000c2:	d002      	beq.n	80000ca <__do_global_dtors_aux+0x16>
 80000c4:	4804      	ldr	r0, [pc, #16]	@ (80000d8 <__do_global_dtors_aux+0x24>)
 80000c6:	e000      	b.n	80000ca <__do_global_dtors_aux+0x16>
 80000c8:	bf00      	nop
 80000ca:	2301      	movs	r3, #1
 80000cc:	7023      	strb	r3, [r4, #0]
 80000ce:	bd10      	pop	{r4, pc}
 80000d0:	2000005c 	.word	0x2000005c
 80000d4:	00000000 	.word	0x00000000
 80000d8:	080013d0 	.word	0x080013d0

080000dc <frame_dummy>:
 80000dc:	4b04      	ldr	r3, [pc, #16]	@ (80000f0 <frame_dummy+0x14>)
 80000de:	b510      	push	{r4, lr}
 80000e0:	2b00      	cmp	r3, #0
 80000e2:	d003      	beq.n	80000ec <frame_dummy+0x10>
 80000e4:	4903      	ldr	r1, [pc, #12]	@ (80000f4 <frame_dummy+0x18>)
 80000e6:	4804      	ldr	r0, [pc, #16]	@ (80000f8 <frame_dummy+0x1c>)
 80000e8:	e000      	b.n	80000ec <frame_dummy+0x10>
 80000ea:	bf00      	nop
 80000ec:	bd10      	pop	{r4, pc}
 80000ee:	46c0      	nop			@ (mov r8, r8)
 80000f0:	00000000 	.word	0x00000000
 80000f4:	20000060 	.word	0x20000060
 80000f8:	080013d0 	.word	0x080013d0

080000fc <__gnu_thumb1_case_shi>:
 80000fc:	b403      	push	{r0, r1}
 80000fe:	4671      	mov	r1, lr
 8000100:	0849      	lsrs	r1, r1, #1
 8000102:	0040      	lsls	r0, r0, #1
 8000104:	0049      	lsls	r1, r1, #1
 8000106:	5e09      	ldrsh	r1, [r1, r0]
 8000108:	0049      	lsls	r1, r1, #1
 800010a:	448e      	add	lr, r1
 800010c:	bc03      	pop	{r0, r1}
 800010e:	4770      	bx	lr

08000110 <__udivsi3>:
 8000110:	2200      	movs	r2, #0
 8000112:	0843      	lsrs	r3, r0, #1
 8000114:	428b      	cmp	r3, r1
 8000116:	d374      	bcc.n	8000202 <__udivsi3+0xf2>
 8000118:	0903      	lsrs	r3, r0, #4
 800011a:	428b      	cmp	r3, r1
 800011c:	d35f      	bcc.n	80001de <__udivsi3+0xce>
 800011e:	0a03      	lsrs	r3, r0, #8
 8000120:	428b      	cmp	r3, r1
 8000122:	d344      	bcc.n	80001ae <__udivsi3+0x9e>
 8000124:	0b03      	lsrs	r3, r0, #12
 8000126:	428b      	cmp	r3, r1
 8000128:	d328      	bcc.n	800017c <__udivsi3+0x6c>
 800012a:	0c03      	lsrs	r3, r0, #16
 800012c:	428b      	cmp	r3, r1
 800012e:	d30d      	bcc.n	800014c <__udivsi3+0x3c>
 8000130:	22ff      	movs	r2, #255	@ 0xff
 8000132:	0209      	lsls	r1, r1, #8
 8000134:	ba12      	rev	r2, r2
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d302      	bcc.n	8000142 <__udivsi3+0x32>
 800013c:	1212      	asrs	r2, r2, #8
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	d065      	beq.n	800020e <__udivsi3+0xfe>
 8000142:	0b03      	lsrs	r3, r0, #12
 8000144:	428b      	cmp	r3, r1
 8000146:	d319      	bcc.n	800017c <__udivsi3+0x6c>
 8000148:	e000      	b.n	800014c <__udivsi3+0x3c>
 800014a:	0a09      	lsrs	r1, r1, #8
 800014c:	0bc3      	lsrs	r3, r0, #15
 800014e:	428b      	cmp	r3, r1
 8000150:	d301      	bcc.n	8000156 <__udivsi3+0x46>
 8000152:	03cb      	lsls	r3, r1, #15
 8000154:	1ac0      	subs	r0, r0, r3
 8000156:	4152      	adcs	r2, r2
 8000158:	0b83      	lsrs	r3, r0, #14
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x52>
 800015e:	038b      	lsls	r3, r1, #14
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b43      	lsrs	r3, r0, #13
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x5e>
 800016a:	034b      	lsls	r3, r1, #13
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b03      	lsrs	r3, r0, #12
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x6a>
 8000176:	030b      	lsls	r3, r1, #12
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0ac3      	lsrs	r3, r0, #11
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x76>
 8000182:	02cb      	lsls	r3, r1, #11
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0a83      	lsrs	r3, r0, #10
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x82>
 800018e:	028b      	lsls	r3, r1, #10
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a43      	lsrs	r3, r0, #9
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x8e>
 800019a:	024b      	lsls	r3, r1, #9
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a03      	lsrs	r3, r0, #8
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x9a>
 80001a6:	020b      	lsls	r3, r1, #8
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	d2cd      	bcs.n	800014a <__udivsi3+0x3a>
 80001ae:	09c3      	lsrs	r3, r0, #7
 80001b0:	428b      	cmp	r3, r1
 80001b2:	d301      	bcc.n	80001b8 <__udivsi3+0xa8>
 80001b4:	01cb      	lsls	r3, r1, #7
 80001b6:	1ac0      	subs	r0, r0, r3
 80001b8:	4152      	adcs	r2, r2
 80001ba:	0983      	lsrs	r3, r0, #6
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xb4>
 80001c0:	018b      	lsls	r3, r1, #6
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0943      	lsrs	r3, r0, #5
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xc0>
 80001cc:	014b      	lsls	r3, r1, #5
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0903      	lsrs	r3, r0, #4
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xcc>
 80001d8:	010b      	lsls	r3, r1, #4
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	08c3      	lsrs	r3, r0, #3
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xd8>
 80001e4:	00cb      	lsls	r3, r1, #3
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0883      	lsrs	r3, r0, #2
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xe4>
 80001f0:	008b      	lsls	r3, r1, #2
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0843      	lsrs	r3, r0, #1
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xf0>
 80001fc:	004b      	lsls	r3, r1, #1
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	1a41      	subs	r1, r0, r1
 8000204:	d200      	bcs.n	8000208 <__udivsi3+0xf8>
 8000206:	4601      	mov	r1, r0
 8000208:	4152      	adcs	r2, r2
 800020a:	4610      	mov	r0, r2
 800020c:	4770      	bx	lr
 800020e:	e7ff      	b.n	8000210 <__udivsi3+0x100>
 8000210:	b501      	push	{r0, lr}
 8000212:	2000      	movs	r0, #0
 8000214:	f000 f806 	bl	8000224 <__aeabi_idiv0>
 8000218:	bd02      	pop	{r1, pc}
 800021a:	46c0      	nop			@ (mov r8, r8)

0800021c <__aeabi_uidivmod>:
 800021c:	2900      	cmp	r1, #0
 800021e:	d0f7      	beq.n	8000210 <__udivsi3+0x100>
 8000220:	e776      	b.n	8000110 <__udivsi3>
 8000222:	4770      	bx	lr

08000224 <__aeabi_idiv0>:
 8000224:	4770      	bx	lr
 8000226:	46c0      	nop			@ (mov r8, r8)

08000228 <main>:




int main(void)
{
 8000228:	b580      	push	{r7, lr}
 800022a:	af00      	add	r7, sp, #0
	uart2_tx_init();
 800022c:	f000 f8b2 	bl	8000394 <uart2_tx_init>
	while(1)
	{
		printf("Hello\n\r");
 8000230:	4b02      	ldr	r3, [pc, #8]	@ (800023c <main+0x14>)
 8000232:	0018      	movs	r0, r3
 8000234:	f000 fa30 	bl	8000698 <iprintf>
 8000238:	e7fa      	b.n	8000230 <main+0x8>
 800023a:	46c0      	nop			@ (mov r8, r8)
 800023c:	080013e8 	.word	0x080013e8

08000240 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000240:	b580      	push	{r7, lr}
 8000242:	b086      	sub	sp, #24
 8000244:	af00      	add	r7, sp, #0
 8000246:	60f8      	str	r0, [r7, #12]
 8000248:	60b9      	str	r1, [r7, #8]
 800024a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800024c:	2300      	movs	r3, #0
 800024e:	617b      	str	r3, [r7, #20]
 8000250:	e00a      	b.n	8000268 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000252:	e000      	b.n	8000256 <_read+0x16>
 8000254:	bf00      	nop
 8000256:	0001      	movs	r1, r0
 8000258:	68bb      	ldr	r3, [r7, #8]
 800025a:	1c5a      	adds	r2, r3, #1
 800025c:	60ba      	str	r2, [r7, #8]
 800025e:	b2ca      	uxtb	r2, r1
 8000260:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000262:	697b      	ldr	r3, [r7, #20]
 8000264:	3301      	adds	r3, #1
 8000266:	617b      	str	r3, [r7, #20]
 8000268:	697a      	ldr	r2, [r7, #20]
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	429a      	cmp	r2, r3
 800026e:	dbf0      	blt.n	8000252 <_read+0x12>
  }

  return len;
 8000270:	687b      	ldr	r3, [r7, #4]
}
 8000272:	0018      	movs	r0, r3
 8000274:	46bd      	mov	sp, r7
 8000276:	b006      	add	sp, #24
 8000278:	bd80      	pop	{r7, pc}

0800027a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800027a:	b580      	push	{r7, lr}
 800027c:	b086      	sub	sp, #24
 800027e:	af00      	add	r7, sp, #0
 8000280:	60f8      	str	r0, [r7, #12]
 8000282:	60b9      	str	r1, [r7, #8]
 8000284:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000286:	2300      	movs	r3, #0
 8000288:	617b      	str	r3, [r7, #20]
 800028a:	e009      	b.n	80002a0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800028c:	68bb      	ldr	r3, [r7, #8]
 800028e:	1c5a      	adds	r2, r3, #1
 8000290:	60ba      	str	r2, [r7, #8]
 8000292:	781b      	ldrb	r3, [r3, #0]
 8000294:	0018      	movs	r0, r3
 8000296:	f000 f86f 	bl	8000378 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800029a:	697b      	ldr	r3, [r7, #20]
 800029c:	3301      	adds	r3, #1
 800029e:	617b      	str	r3, [r7, #20]
 80002a0:	697a      	ldr	r2, [r7, #20]
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	429a      	cmp	r2, r3
 80002a6:	dbf1      	blt.n	800028c <_write+0x12>
  }
  return len;
 80002a8:	687b      	ldr	r3, [r7, #4]
}
 80002aa:	0018      	movs	r0, r3
 80002ac:	46bd      	mov	sp, r7
 80002ae:	b006      	add	sp, #24
 80002b0:	bd80      	pop	{r7, pc}

080002b2 <_close>:

int _close(int file)
{
 80002b2:	b580      	push	{r7, lr}
 80002b4:	b082      	sub	sp, #8
 80002b6:	af00      	add	r7, sp, #0
 80002b8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80002ba:	2301      	movs	r3, #1
 80002bc:	425b      	negs	r3, r3
}
 80002be:	0018      	movs	r0, r3
 80002c0:	46bd      	mov	sp, r7
 80002c2:	b002      	add	sp, #8
 80002c4:	bd80      	pop	{r7, pc}

080002c6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002c6:	b580      	push	{r7, lr}
 80002c8:	b082      	sub	sp, #8
 80002ca:	af00      	add	r7, sp, #0
 80002cc:	6078      	str	r0, [r7, #4]
 80002ce:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80002d0:	683b      	ldr	r3, [r7, #0]
 80002d2:	2280      	movs	r2, #128	@ 0x80
 80002d4:	0192      	lsls	r2, r2, #6
 80002d6:	605a      	str	r2, [r3, #4]
  return 0;
 80002d8:	2300      	movs	r3, #0
}
 80002da:	0018      	movs	r0, r3
 80002dc:	46bd      	mov	sp, r7
 80002de:	b002      	add	sp, #8
 80002e0:	bd80      	pop	{r7, pc}

080002e2 <_isatty>:

int _isatty(int file)
{
 80002e2:	b580      	push	{r7, lr}
 80002e4:	b082      	sub	sp, #8
 80002e6:	af00      	add	r7, sp, #0
 80002e8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80002ea:	2301      	movs	r3, #1
}
 80002ec:	0018      	movs	r0, r3
 80002ee:	46bd      	mov	sp, r7
 80002f0:	b002      	add	sp, #8
 80002f2:	bd80      	pop	{r7, pc}

080002f4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002f4:	b580      	push	{r7, lr}
 80002f6:	b084      	sub	sp, #16
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	60f8      	str	r0, [r7, #12]
 80002fc:	60b9      	str	r1, [r7, #8]
 80002fe:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000300:	2300      	movs	r3, #0
}
 8000302:	0018      	movs	r0, r3
 8000304:	46bd      	mov	sp, r7
 8000306:	b004      	add	sp, #16
 8000308:	bd80      	pop	{r7, pc}
	...

0800030c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800030c:	b580      	push	{r7, lr}
 800030e:	b086      	sub	sp, #24
 8000310:	af00      	add	r7, sp, #0
 8000312:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000314:	4a14      	ldr	r2, [pc, #80]	@ (8000368 <_sbrk+0x5c>)
 8000316:	4b15      	ldr	r3, [pc, #84]	@ (800036c <_sbrk+0x60>)
 8000318:	1ad3      	subs	r3, r2, r3
 800031a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800031c:	697b      	ldr	r3, [r7, #20]
 800031e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000320:	4b13      	ldr	r3, [pc, #76]	@ (8000370 <_sbrk+0x64>)
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	2b00      	cmp	r3, #0
 8000326:	d102      	bne.n	800032e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000328:	4b11      	ldr	r3, [pc, #68]	@ (8000370 <_sbrk+0x64>)
 800032a:	4a12      	ldr	r2, [pc, #72]	@ (8000374 <_sbrk+0x68>)
 800032c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800032e:	4b10      	ldr	r3, [pc, #64]	@ (8000370 <_sbrk+0x64>)
 8000330:	681a      	ldr	r2, [r3, #0]
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	18d3      	adds	r3, r2, r3
 8000336:	693a      	ldr	r2, [r7, #16]
 8000338:	429a      	cmp	r2, r3
 800033a:	d207      	bcs.n	800034c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800033c:	f000 fa5e 	bl	80007fc <__errno>
 8000340:	0003      	movs	r3, r0
 8000342:	220c      	movs	r2, #12
 8000344:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000346:	2301      	movs	r3, #1
 8000348:	425b      	negs	r3, r3
 800034a:	e009      	b.n	8000360 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800034c:	4b08      	ldr	r3, [pc, #32]	@ (8000370 <_sbrk+0x64>)
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000352:	4b07      	ldr	r3, [pc, #28]	@ (8000370 <_sbrk+0x64>)
 8000354:	681a      	ldr	r2, [r3, #0]
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	18d2      	adds	r2, r2, r3
 800035a:	4b05      	ldr	r3, [pc, #20]	@ (8000370 <_sbrk+0x64>)
 800035c:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 800035e:	68fb      	ldr	r3, [r7, #12]
}
 8000360:	0018      	movs	r0, r3
 8000362:	46bd      	mov	sp, r7
 8000364:	b006      	add	sp, #24
 8000366:	bd80      	pop	{r7, pc}
 8000368:	20003000 	.word	0x20003000
 800036c:	00000400 	.word	0x00000400
 8000370:	20000078 	.word	0x20000078
 8000374:	200001c8 	.word	0x200001c8

08000378 <__io_putchar>:
void uart2_write(int ch);



int __io_putchar(int ch)
{
 8000378:	b580      	push	{r7, lr}
 800037a:	b082      	sub	sp, #8
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	0018      	movs	r0, r3
 8000384:	f000 f85c 	bl	8000440 <uart2_write>
	return ch;
 8000388:	687b      	ldr	r3, [r7, #4]
}
 800038a:	0018      	movs	r0, r3
 800038c:	46bd      	mov	sp, r7
 800038e:	b002      	add	sp, #8
 8000390:	bd80      	pop	{r7, pc}
	...

08000394 <uart2_tx_init>:


void uart2_tx_init(void)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	af00      	add	r7, sp, #0
	//uart gpio pin
	//enable clock on gpioa
	RCC->IOPENR |= GPIOAEN;
 8000398:	4b24      	ldr	r3, [pc, #144]	@ (800042c <uart2_tx_init+0x98>)
 800039a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800039c:	4b23      	ldr	r3, [pc, #140]	@ (800042c <uart2_tx_init+0x98>)
 800039e:	2101      	movs	r1, #1
 80003a0:	430a      	orrs	r2, r1
 80003a2:	635a      	str	r2, [r3, #52]	@ 0x34

	//PA2 mode to alternate function mode
	GPIOA->MODER &=~(1U<<4);
 80003a4:	23a0      	movs	r3, #160	@ 0xa0
 80003a6:	05db      	lsls	r3, r3, #23
 80003a8:	681a      	ldr	r2, [r3, #0]
 80003aa:	23a0      	movs	r3, #160	@ 0xa0
 80003ac:	05db      	lsls	r3, r3, #23
 80003ae:	2110      	movs	r1, #16
 80003b0:	438a      	bics	r2, r1
 80003b2:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (1U<<5);
 80003b4:	23a0      	movs	r3, #160	@ 0xa0
 80003b6:	05db      	lsls	r3, r3, #23
 80003b8:	681a      	ldr	r2, [r3, #0]
 80003ba:	23a0      	movs	r3, #160	@ 0xa0
 80003bc:	05db      	lsls	r3, r3, #23
 80003be:	2120      	movs	r1, #32
 80003c0:	430a      	orrs	r2, r1
 80003c2:	601a      	str	r2, [r3, #0]

	//SetPA2 alt function type to UART_TX (AF01)
	GPIOA->AFR[0] &= ~(0xFU << (2 * 4)); // clear AFRL bits for PA2
 80003c4:	23a0      	movs	r3, #160	@ 0xa0
 80003c6:	05db      	lsls	r3, r3, #23
 80003c8:	6a1a      	ldr	r2, [r3, #32]
 80003ca:	23a0      	movs	r3, #160	@ 0xa0
 80003cc:	05db      	lsls	r3, r3, #23
 80003ce:	4918      	ldr	r1, [pc, #96]	@ (8000430 <uart2_tx_init+0x9c>)
 80003d0:	400a      	ands	r2, r1
 80003d2:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] |=  (0x1U << (2 * 4)); // AF1 = USART2_TX
 80003d4:	23a0      	movs	r3, #160	@ 0xa0
 80003d6:	05db      	lsls	r3, r3, #23
 80003d8:	6a1a      	ldr	r2, [r3, #32]
 80003da:	23a0      	movs	r3, #160	@ 0xa0
 80003dc:	05db      	lsls	r3, r3, #23
 80003de:	2180      	movs	r1, #128	@ 0x80
 80003e0:	0049      	lsls	r1, r1, #1
 80003e2:	430a      	orrs	r2, r1
 80003e4:	621a      	str	r2, [r3, #32]

	//configure UART module
	//enable clock on UART2
	RCC->APBENR1 |= UART2EN;
 80003e6:	4b11      	ldr	r3, [pc, #68]	@ (800042c <uart2_tx_init+0x98>)
 80003e8:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80003ea:	4b10      	ldr	r3, [pc, #64]	@ (800042c <uart2_tx_init+0x98>)
 80003ec:	2180      	movs	r1, #128	@ 0x80
 80003ee:	0289      	lsls	r1, r1, #10
 80003f0:	430a      	orrs	r2, r1
 80003f2:	63da      	str	r2, [r3, #60]	@ 0x3c
	//consigure BAUD rate
	uart_set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
 80003f4:	23e1      	movs	r3, #225	@ 0xe1
 80003f6:	025b      	lsls	r3, r3, #9
 80003f8:	490e      	ldr	r1, [pc, #56]	@ (8000434 <uart2_tx_init+0xa0>)
 80003fa:	480f      	ldr	r0, [pc, #60]	@ (8000438 <uart2_tx_init+0xa4>)
 80003fc:	001a      	movs	r2, r3
 80003fe:	f000 f835 	bl	800046c <uart_set_baudrate>
	//USART2->BRR =  (2 * 48000000)/921600;
	//config transfer direction
	USART2->CR1 = 0x0;
 8000402:	4b0d      	ldr	r3, [pc, #52]	@ (8000438 <uart2_tx_init+0xa4>)
 8000404:	2200      	movs	r2, #0
 8000406:	601a      	str	r2, [r3, #0]
	USART2->CR1 = CR1_TE;
 8000408:	4b0b      	ldr	r3, [pc, #44]	@ (8000438 <uart2_tx_init+0xa4>)
 800040a:	2208      	movs	r2, #8
 800040c:	601a      	str	r2, [r3, #0]
	USART2->CR1 &= ~CR_FIFOEN;
 800040e:	4b0a      	ldr	r3, [pc, #40]	@ (8000438 <uart2_tx_init+0xa4>)
 8000410:	681a      	ldr	r2, [r3, #0]
 8000412:	4b09      	ldr	r3, [pc, #36]	@ (8000438 <uart2_tx_init+0xa4>)
 8000414:	4909      	ldr	r1, [pc, #36]	@ (800043c <uart2_tx_init+0xa8>)
 8000416:	400a      	ands	r2, r1
 8000418:	601a      	str	r2, [r3, #0]
	//enable uArt module
	USART2->CR1 |= CR1_UE;
 800041a:	4b07      	ldr	r3, [pc, #28]	@ (8000438 <uart2_tx_init+0xa4>)
 800041c:	681a      	ldr	r2, [r3, #0]
 800041e:	4b06      	ldr	r3, [pc, #24]	@ (8000438 <uart2_tx_init+0xa4>)
 8000420:	2101      	movs	r1, #1
 8000422:	430a      	orrs	r2, r1
 8000424:	601a      	str	r2, [r3, #0]


}
 8000426:	46c0      	nop			@ (mov r8, r8)
 8000428:	46bd      	mov	sp, r7
 800042a:	bd80      	pop	{r7, pc}
 800042c:	40021000 	.word	0x40021000
 8000430:	fffff0ff 	.word	0xfffff0ff
 8000434:	00b71b00 	.word	0x00b71b00
 8000438:	40004400 	.word	0x40004400
 800043c:	dfffffff 	.word	0xdfffffff

08000440 <uart2_write>:



void uart2_write(int ch)
{
 8000440:	b580      	push	{r7, lr}
 8000442:	b082      	sub	sp, #8
 8000444:	af00      	add	r7, sp, #0
 8000446:	6078      	str	r0, [r7, #4]
	//transmit data reg should be empty first
	while(!(USART2->ISR & SR_TXE)){};
 8000448:	46c0      	nop			@ (mov r8, r8)
 800044a:	4b07      	ldr	r3, [pc, #28]	@ (8000468 <uart2_write+0x28>)
 800044c:	69db      	ldr	r3, [r3, #28]
 800044e:	2280      	movs	r2, #128	@ 0x80
 8000450:	4013      	ands	r3, r2
 8000452:	d0fa      	beq.n	800044a <uart2_write+0xa>
	//write to transmit data reg
	USART2->TDR  = (ch & 0xFF);
 8000454:	687a      	ldr	r2, [r7, #4]
 8000456:	4b04      	ldr	r3, [pc, #16]	@ (8000468 <uart2_write+0x28>)
 8000458:	21ff      	movs	r1, #255	@ 0xff
 800045a:	400a      	ands	r2, r1
 800045c:	629a      	str	r2, [r3, #40]	@ 0x28
	//

}
 800045e:	46c0      	nop			@ (mov r8, r8)
 8000460:	46bd      	mov	sp, r7
 8000462:	b002      	add	sp, #8
 8000464:	bd80      	pop	{r7, pc}
 8000466:	46c0      	nop			@ (mov r8, r8)
 8000468:	40004400 	.word	0x40004400

0800046c <uart_set_baudrate>:

static void uart_set_baudrate(USART_TypeDef * USARTx, uint32_t PeriphClk, uint32_t DesiredBaudRate)
{
 800046c:	b580      	push	{r7, lr}
 800046e:	b084      	sub	sp, #16
 8000470:	af00      	add	r7, sp, #0
 8000472:	60f8      	str	r0, [r7, #12]
 8000474:	60b9      	str	r1, [r7, #8]
 8000476:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(PeriphClk, DesiredBaudRate);
 8000478:	687a      	ldr	r2, [r7, #4]
 800047a:	68bb      	ldr	r3, [r7, #8]
 800047c:	0011      	movs	r1, r2
 800047e:	0018      	movs	r0, r3
 8000480:	f000 f808 	bl	8000494 <compute_uart_bd>
 8000484:	0003      	movs	r3, r0
 8000486:	001a      	movs	r2, r3
 8000488:	68fb      	ldr	r3, [r7, #12]
 800048a:	60da      	str	r2, [r3, #12]
}
 800048c:	46c0      	nop			@ (mov r8, r8)
 800048e:	46bd      	mov	sp, r7
 8000490:	b004      	add	sp, #16
 8000492:	bd80      	pop	{r7, pc}

08000494 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 8000494:	b580      	push	{r7, lr}
 8000496:	b082      	sub	sp, #8
 8000498:	af00      	add	r7, sp, #0
 800049a:	6078      	str	r0, [r7, #4]
 800049c:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 800049e:	683b      	ldr	r3, [r7, #0]
 80004a0:	085a      	lsrs	r2, r3, #1
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	18d3      	adds	r3, r2, r3
 80004a6:	6839      	ldr	r1, [r7, #0]
 80004a8:	0018      	movs	r0, r3
 80004aa:	f7ff fe31 	bl	8000110 <__udivsi3>
 80004ae:	0003      	movs	r3, r0
 80004b0:	b29b      	uxth	r3, r3
}
 80004b2:	0018      	movs	r0, r3
 80004b4:	46bd      	mov	sp, r7
 80004b6:	b002      	add	sp, #8
 80004b8:	bd80      	pop	{r7, pc}
	...

080004bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004bc:	480d      	ldr	r0, [pc, #52]	@ (80004f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004be:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004c0:	e000      	b.n	80004c4 <Reset_Handler+0x8>
 80004c2:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004c4:	480c      	ldr	r0, [pc, #48]	@ (80004f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80004c6:	490d      	ldr	r1, [pc, #52]	@ (80004fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80004c8:	4a0d      	ldr	r2, [pc, #52]	@ (8000500 <LoopForever+0xe>)
  movs r3, #0
 80004ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004cc:	e002      	b.n	80004d4 <LoopCopyDataInit>

080004ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004d2:	3304      	adds	r3, #4

080004d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004d8:	d3f9      	bcc.n	80004ce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004da:	4a0a      	ldr	r2, [pc, #40]	@ (8000504 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004dc:	4c0a      	ldr	r4, [pc, #40]	@ (8000508 <LoopForever+0x16>)
  movs r3, #0
 80004de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004e0:	e001      	b.n	80004e6 <LoopFillZerobss>

080004e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004e4:	3204      	adds	r2, #4

080004e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004e8:	d3fb      	bcc.n	80004e2 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80004ea:	f000 f98d 	bl	8000808 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 80004ee:	f7ff fe9b 	bl	8000228 <main>

080004f2 <LoopForever>:

LoopForever:
  b LoopForever
 80004f2:	e7fe      	b.n	80004f2 <LoopForever>
  ldr   r0, =_estack
 80004f4:	20003000 	.word	0x20003000
  ldr r0, =_sdata
 80004f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004fc:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000500:	0800142c 	.word	0x0800142c
  ldr r2, =_sbss
 8000504:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000508:	200001c8 	.word	0x200001c8

0800050c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800050c:	e7fe      	b.n	800050c <ADC_IRQHandler>
	...

08000510 <std>:
 8000510:	2300      	movs	r3, #0
 8000512:	b510      	push	{r4, lr}
 8000514:	0004      	movs	r4, r0
 8000516:	6003      	str	r3, [r0, #0]
 8000518:	6043      	str	r3, [r0, #4]
 800051a:	6083      	str	r3, [r0, #8]
 800051c:	8181      	strh	r1, [r0, #12]
 800051e:	6643      	str	r3, [r0, #100]	@ 0x64
 8000520:	81c2      	strh	r2, [r0, #14]
 8000522:	6103      	str	r3, [r0, #16]
 8000524:	6143      	str	r3, [r0, #20]
 8000526:	6183      	str	r3, [r0, #24]
 8000528:	0019      	movs	r1, r3
 800052a:	2208      	movs	r2, #8
 800052c:	305c      	adds	r0, #92	@ 0x5c
 800052e:	f000 f90f 	bl	8000750 <memset>
 8000532:	4b0b      	ldr	r3, [pc, #44]	@ (8000560 <std+0x50>)
 8000534:	6224      	str	r4, [r4, #32]
 8000536:	6263      	str	r3, [r4, #36]	@ 0x24
 8000538:	4b0a      	ldr	r3, [pc, #40]	@ (8000564 <std+0x54>)
 800053a:	62a3      	str	r3, [r4, #40]	@ 0x28
 800053c:	4b0a      	ldr	r3, [pc, #40]	@ (8000568 <std+0x58>)
 800053e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000540:	4b0a      	ldr	r3, [pc, #40]	@ (800056c <std+0x5c>)
 8000542:	6323      	str	r3, [r4, #48]	@ 0x30
 8000544:	4b0a      	ldr	r3, [pc, #40]	@ (8000570 <std+0x60>)
 8000546:	429c      	cmp	r4, r3
 8000548:	d005      	beq.n	8000556 <std+0x46>
 800054a:	4b0a      	ldr	r3, [pc, #40]	@ (8000574 <std+0x64>)
 800054c:	429c      	cmp	r4, r3
 800054e:	d002      	beq.n	8000556 <std+0x46>
 8000550:	4b09      	ldr	r3, [pc, #36]	@ (8000578 <std+0x68>)
 8000552:	429c      	cmp	r4, r3
 8000554:	d103      	bne.n	800055e <std+0x4e>
 8000556:	0020      	movs	r0, r4
 8000558:	3058      	adds	r0, #88	@ 0x58
 800055a:	f000 f979 	bl	8000850 <__retarget_lock_init_recursive>
 800055e:	bd10      	pop	{r4, pc}
 8000560:	080006b9 	.word	0x080006b9
 8000564:	080006e1 	.word	0x080006e1
 8000568:	08000719 	.word	0x08000719
 800056c:	08000745 	.word	0x08000745
 8000570:	2000007c 	.word	0x2000007c
 8000574:	200000e4 	.word	0x200000e4
 8000578:	2000014c 	.word	0x2000014c

0800057c <stdio_exit_handler>:
 800057c:	b510      	push	{r4, lr}
 800057e:	4a03      	ldr	r2, [pc, #12]	@ (800058c <stdio_exit_handler+0x10>)
 8000580:	4903      	ldr	r1, [pc, #12]	@ (8000590 <stdio_exit_handler+0x14>)
 8000582:	4804      	ldr	r0, [pc, #16]	@ (8000594 <stdio_exit_handler+0x18>)
 8000584:	f000 f86c 	bl	8000660 <_fwalk_sglue>
 8000588:	bd10      	pop	{r4, pc}
 800058a:	46c0      	nop			@ (mov r8, r8)
 800058c:	20000000 	.word	0x20000000
 8000590:	080010dd 	.word	0x080010dd
 8000594:	20000010 	.word	0x20000010

08000598 <cleanup_stdio>:
 8000598:	6841      	ldr	r1, [r0, #4]
 800059a:	4b0b      	ldr	r3, [pc, #44]	@ (80005c8 <cleanup_stdio+0x30>)
 800059c:	b510      	push	{r4, lr}
 800059e:	0004      	movs	r4, r0
 80005a0:	4299      	cmp	r1, r3
 80005a2:	d001      	beq.n	80005a8 <cleanup_stdio+0x10>
 80005a4:	f000 fd9a 	bl	80010dc <_fflush_r>
 80005a8:	68a1      	ldr	r1, [r4, #8]
 80005aa:	4b08      	ldr	r3, [pc, #32]	@ (80005cc <cleanup_stdio+0x34>)
 80005ac:	4299      	cmp	r1, r3
 80005ae:	d002      	beq.n	80005b6 <cleanup_stdio+0x1e>
 80005b0:	0020      	movs	r0, r4
 80005b2:	f000 fd93 	bl	80010dc <_fflush_r>
 80005b6:	68e1      	ldr	r1, [r4, #12]
 80005b8:	4b05      	ldr	r3, [pc, #20]	@ (80005d0 <cleanup_stdio+0x38>)
 80005ba:	4299      	cmp	r1, r3
 80005bc:	d002      	beq.n	80005c4 <cleanup_stdio+0x2c>
 80005be:	0020      	movs	r0, r4
 80005c0:	f000 fd8c 	bl	80010dc <_fflush_r>
 80005c4:	bd10      	pop	{r4, pc}
 80005c6:	46c0      	nop			@ (mov r8, r8)
 80005c8:	2000007c 	.word	0x2000007c
 80005cc:	200000e4 	.word	0x200000e4
 80005d0:	2000014c 	.word	0x2000014c

080005d4 <global_stdio_init.part.0>:
 80005d4:	b510      	push	{r4, lr}
 80005d6:	4b09      	ldr	r3, [pc, #36]	@ (80005fc <global_stdio_init.part.0+0x28>)
 80005d8:	4a09      	ldr	r2, [pc, #36]	@ (8000600 <global_stdio_init.part.0+0x2c>)
 80005da:	2104      	movs	r1, #4
 80005dc:	601a      	str	r2, [r3, #0]
 80005de:	4809      	ldr	r0, [pc, #36]	@ (8000604 <global_stdio_init.part.0+0x30>)
 80005e0:	2200      	movs	r2, #0
 80005e2:	f7ff ff95 	bl	8000510 <std>
 80005e6:	2201      	movs	r2, #1
 80005e8:	2109      	movs	r1, #9
 80005ea:	4807      	ldr	r0, [pc, #28]	@ (8000608 <global_stdio_init.part.0+0x34>)
 80005ec:	f7ff ff90 	bl	8000510 <std>
 80005f0:	2202      	movs	r2, #2
 80005f2:	2112      	movs	r1, #18
 80005f4:	4805      	ldr	r0, [pc, #20]	@ (800060c <global_stdio_init.part.0+0x38>)
 80005f6:	f7ff ff8b 	bl	8000510 <std>
 80005fa:	bd10      	pop	{r4, pc}
 80005fc:	200001b4 	.word	0x200001b4
 8000600:	0800057d 	.word	0x0800057d
 8000604:	2000007c 	.word	0x2000007c
 8000608:	200000e4 	.word	0x200000e4
 800060c:	2000014c 	.word	0x2000014c

08000610 <__sfp_lock_acquire>:
 8000610:	b510      	push	{r4, lr}
 8000612:	4802      	ldr	r0, [pc, #8]	@ (800061c <__sfp_lock_acquire+0xc>)
 8000614:	f000 f91d 	bl	8000852 <__retarget_lock_acquire_recursive>
 8000618:	bd10      	pop	{r4, pc}
 800061a:	46c0      	nop			@ (mov r8, r8)
 800061c:	200001bd 	.word	0x200001bd

08000620 <__sfp_lock_release>:
 8000620:	b510      	push	{r4, lr}
 8000622:	4802      	ldr	r0, [pc, #8]	@ (800062c <__sfp_lock_release+0xc>)
 8000624:	f000 f916 	bl	8000854 <__retarget_lock_release_recursive>
 8000628:	bd10      	pop	{r4, pc}
 800062a:	46c0      	nop			@ (mov r8, r8)
 800062c:	200001bd 	.word	0x200001bd

08000630 <__sinit>:
 8000630:	b510      	push	{r4, lr}
 8000632:	0004      	movs	r4, r0
 8000634:	f7ff ffec 	bl	8000610 <__sfp_lock_acquire>
 8000638:	6a23      	ldr	r3, [r4, #32]
 800063a:	2b00      	cmp	r3, #0
 800063c:	d002      	beq.n	8000644 <__sinit+0x14>
 800063e:	f7ff ffef 	bl	8000620 <__sfp_lock_release>
 8000642:	bd10      	pop	{r4, pc}
 8000644:	4b04      	ldr	r3, [pc, #16]	@ (8000658 <__sinit+0x28>)
 8000646:	6223      	str	r3, [r4, #32]
 8000648:	4b04      	ldr	r3, [pc, #16]	@ (800065c <__sinit+0x2c>)
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	2b00      	cmp	r3, #0
 800064e:	d1f6      	bne.n	800063e <__sinit+0xe>
 8000650:	f7ff ffc0 	bl	80005d4 <global_stdio_init.part.0>
 8000654:	e7f3      	b.n	800063e <__sinit+0xe>
 8000656:	46c0      	nop			@ (mov r8, r8)
 8000658:	08000599 	.word	0x08000599
 800065c:	200001b4 	.word	0x200001b4

08000660 <_fwalk_sglue>:
 8000660:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000662:	0014      	movs	r4, r2
 8000664:	2600      	movs	r6, #0
 8000666:	9000      	str	r0, [sp, #0]
 8000668:	9101      	str	r1, [sp, #4]
 800066a:	68a5      	ldr	r5, [r4, #8]
 800066c:	6867      	ldr	r7, [r4, #4]
 800066e:	3f01      	subs	r7, #1
 8000670:	d504      	bpl.n	800067c <_fwalk_sglue+0x1c>
 8000672:	6824      	ldr	r4, [r4, #0]
 8000674:	2c00      	cmp	r4, #0
 8000676:	d1f8      	bne.n	800066a <_fwalk_sglue+0xa>
 8000678:	0030      	movs	r0, r6
 800067a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800067c:	89ab      	ldrh	r3, [r5, #12]
 800067e:	2b01      	cmp	r3, #1
 8000680:	d908      	bls.n	8000694 <_fwalk_sglue+0x34>
 8000682:	220e      	movs	r2, #14
 8000684:	5eab      	ldrsh	r3, [r5, r2]
 8000686:	3301      	adds	r3, #1
 8000688:	d004      	beq.n	8000694 <_fwalk_sglue+0x34>
 800068a:	0029      	movs	r1, r5
 800068c:	9800      	ldr	r0, [sp, #0]
 800068e:	9b01      	ldr	r3, [sp, #4]
 8000690:	4798      	blx	r3
 8000692:	4306      	orrs	r6, r0
 8000694:	3568      	adds	r5, #104	@ 0x68
 8000696:	e7ea      	b.n	800066e <_fwalk_sglue+0xe>

08000698 <iprintf>:
 8000698:	b40f      	push	{r0, r1, r2, r3}
 800069a:	b507      	push	{r0, r1, r2, lr}
 800069c:	4905      	ldr	r1, [pc, #20]	@ (80006b4 <iprintf+0x1c>)
 800069e:	ab04      	add	r3, sp, #16
 80006a0:	6808      	ldr	r0, [r1, #0]
 80006a2:	cb04      	ldmia	r3!, {r2}
 80006a4:	6881      	ldr	r1, [r0, #8]
 80006a6:	9301      	str	r3, [sp, #4]
 80006a8:	f000 f9fa 	bl	8000aa0 <_vfiprintf_r>
 80006ac:	b003      	add	sp, #12
 80006ae:	bc08      	pop	{r3}
 80006b0:	b004      	add	sp, #16
 80006b2:	4718      	bx	r3
 80006b4:	2000000c 	.word	0x2000000c

080006b8 <__sread>:
 80006b8:	b570      	push	{r4, r5, r6, lr}
 80006ba:	000c      	movs	r4, r1
 80006bc:	250e      	movs	r5, #14
 80006be:	5f49      	ldrsh	r1, [r1, r5]
 80006c0:	f000 f874 	bl	80007ac <_read_r>
 80006c4:	2800      	cmp	r0, #0
 80006c6:	db03      	blt.n	80006d0 <__sread+0x18>
 80006c8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80006ca:	181b      	adds	r3, r3, r0
 80006cc:	6563      	str	r3, [r4, #84]	@ 0x54
 80006ce:	bd70      	pop	{r4, r5, r6, pc}
 80006d0:	89a3      	ldrh	r3, [r4, #12]
 80006d2:	4a02      	ldr	r2, [pc, #8]	@ (80006dc <__sread+0x24>)
 80006d4:	4013      	ands	r3, r2
 80006d6:	81a3      	strh	r3, [r4, #12]
 80006d8:	e7f9      	b.n	80006ce <__sread+0x16>
 80006da:	46c0      	nop			@ (mov r8, r8)
 80006dc:	ffffefff 	.word	0xffffefff

080006e0 <__swrite>:
 80006e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006e2:	001f      	movs	r7, r3
 80006e4:	898b      	ldrh	r3, [r1, #12]
 80006e6:	0005      	movs	r5, r0
 80006e8:	000c      	movs	r4, r1
 80006ea:	0016      	movs	r6, r2
 80006ec:	05db      	lsls	r3, r3, #23
 80006ee:	d505      	bpl.n	80006fc <__swrite+0x1c>
 80006f0:	230e      	movs	r3, #14
 80006f2:	5ec9      	ldrsh	r1, [r1, r3]
 80006f4:	2200      	movs	r2, #0
 80006f6:	2302      	movs	r3, #2
 80006f8:	f000 f844 	bl	8000784 <_lseek_r>
 80006fc:	89a3      	ldrh	r3, [r4, #12]
 80006fe:	4a05      	ldr	r2, [pc, #20]	@ (8000714 <__swrite+0x34>)
 8000700:	0028      	movs	r0, r5
 8000702:	4013      	ands	r3, r2
 8000704:	81a3      	strh	r3, [r4, #12]
 8000706:	0032      	movs	r2, r6
 8000708:	230e      	movs	r3, #14
 800070a:	5ee1      	ldrsh	r1, [r4, r3]
 800070c:	003b      	movs	r3, r7
 800070e:	f000 f861 	bl	80007d4 <_write_r>
 8000712:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000714:	ffffefff 	.word	0xffffefff

08000718 <__sseek>:
 8000718:	b570      	push	{r4, r5, r6, lr}
 800071a:	000c      	movs	r4, r1
 800071c:	250e      	movs	r5, #14
 800071e:	5f49      	ldrsh	r1, [r1, r5]
 8000720:	f000 f830 	bl	8000784 <_lseek_r>
 8000724:	89a3      	ldrh	r3, [r4, #12]
 8000726:	1c42      	adds	r2, r0, #1
 8000728:	d103      	bne.n	8000732 <__sseek+0x1a>
 800072a:	4a05      	ldr	r2, [pc, #20]	@ (8000740 <__sseek+0x28>)
 800072c:	4013      	ands	r3, r2
 800072e:	81a3      	strh	r3, [r4, #12]
 8000730:	bd70      	pop	{r4, r5, r6, pc}
 8000732:	2280      	movs	r2, #128	@ 0x80
 8000734:	0152      	lsls	r2, r2, #5
 8000736:	4313      	orrs	r3, r2
 8000738:	81a3      	strh	r3, [r4, #12]
 800073a:	6560      	str	r0, [r4, #84]	@ 0x54
 800073c:	e7f8      	b.n	8000730 <__sseek+0x18>
 800073e:	46c0      	nop			@ (mov r8, r8)
 8000740:	ffffefff 	.word	0xffffefff

08000744 <__sclose>:
 8000744:	b510      	push	{r4, lr}
 8000746:	230e      	movs	r3, #14
 8000748:	5ec9      	ldrsh	r1, [r1, r3]
 800074a:	f000 f809 	bl	8000760 <_close_r>
 800074e:	bd10      	pop	{r4, pc}

08000750 <memset>:
 8000750:	0003      	movs	r3, r0
 8000752:	1882      	adds	r2, r0, r2
 8000754:	4293      	cmp	r3, r2
 8000756:	d100      	bne.n	800075a <memset+0xa>
 8000758:	4770      	bx	lr
 800075a:	7019      	strb	r1, [r3, #0]
 800075c:	3301      	adds	r3, #1
 800075e:	e7f9      	b.n	8000754 <memset+0x4>

08000760 <_close_r>:
 8000760:	2300      	movs	r3, #0
 8000762:	b570      	push	{r4, r5, r6, lr}
 8000764:	4d06      	ldr	r5, [pc, #24]	@ (8000780 <_close_r+0x20>)
 8000766:	0004      	movs	r4, r0
 8000768:	0008      	movs	r0, r1
 800076a:	602b      	str	r3, [r5, #0]
 800076c:	f7ff fda1 	bl	80002b2 <_close>
 8000770:	1c43      	adds	r3, r0, #1
 8000772:	d103      	bne.n	800077c <_close_r+0x1c>
 8000774:	682b      	ldr	r3, [r5, #0]
 8000776:	2b00      	cmp	r3, #0
 8000778:	d000      	beq.n	800077c <_close_r+0x1c>
 800077a:	6023      	str	r3, [r4, #0]
 800077c:	bd70      	pop	{r4, r5, r6, pc}
 800077e:	46c0      	nop			@ (mov r8, r8)
 8000780:	200001b8 	.word	0x200001b8

08000784 <_lseek_r>:
 8000784:	b570      	push	{r4, r5, r6, lr}
 8000786:	0004      	movs	r4, r0
 8000788:	0008      	movs	r0, r1
 800078a:	0011      	movs	r1, r2
 800078c:	001a      	movs	r2, r3
 800078e:	2300      	movs	r3, #0
 8000790:	4d05      	ldr	r5, [pc, #20]	@ (80007a8 <_lseek_r+0x24>)
 8000792:	602b      	str	r3, [r5, #0]
 8000794:	f7ff fdae 	bl	80002f4 <_lseek>
 8000798:	1c43      	adds	r3, r0, #1
 800079a:	d103      	bne.n	80007a4 <_lseek_r+0x20>
 800079c:	682b      	ldr	r3, [r5, #0]
 800079e:	2b00      	cmp	r3, #0
 80007a0:	d000      	beq.n	80007a4 <_lseek_r+0x20>
 80007a2:	6023      	str	r3, [r4, #0]
 80007a4:	bd70      	pop	{r4, r5, r6, pc}
 80007a6:	46c0      	nop			@ (mov r8, r8)
 80007a8:	200001b8 	.word	0x200001b8

080007ac <_read_r>:
 80007ac:	b570      	push	{r4, r5, r6, lr}
 80007ae:	0004      	movs	r4, r0
 80007b0:	0008      	movs	r0, r1
 80007b2:	0011      	movs	r1, r2
 80007b4:	001a      	movs	r2, r3
 80007b6:	2300      	movs	r3, #0
 80007b8:	4d05      	ldr	r5, [pc, #20]	@ (80007d0 <_read_r+0x24>)
 80007ba:	602b      	str	r3, [r5, #0]
 80007bc:	f7ff fd40 	bl	8000240 <_read>
 80007c0:	1c43      	adds	r3, r0, #1
 80007c2:	d103      	bne.n	80007cc <_read_r+0x20>
 80007c4:	682b      	ldr	r3, [r5, #0]
 80007c6:	2b00      	cmp	r3, #0
 80007c8:	d000      	beq.n	80007cc <_read_r+0x20>
 80007ca:	6023      	str	r3, [r4, #0]
 80007cc:	bd70      	pop	{r4, r5, r6, pc}
 80007ce:	46c0      	nop			@ (mov r8, r8)
 80007d0:	200001b8 	.word	0x200001b8

080007d4 <_write_r>:
 80007d4:	b570      	push	{r4, r5, r6, lr}
 80007d6:	0004      	movs	r4, r0
 80007d8:	0008      	movs	r0, r1
 80007da:	0011      	movs	r1, r2
 80007dc:	001a      	movs	r2, r3
 80007de:	2300      	movs	r3, #0
 80007e0:	4d05      	ldr	r5, [pc, #20]	@ (80007f8 <_write_r+0x24>)
 80007e2:	602b      	str	r3, [r5, #0]
 80007e4:	f7ff fd49 	bl	800027a <_write>
 80007e8:	1c43      	adds	r3, r0, #1
 80007ea:	d103      	bne.n	80007f4 <_write_r+0x20>
 80007ec:	682b      	ldr	r3, [r5, #0]
 80007ee:	2b00      	cmp	r3, #0
 80007f0:	d000      	beq.n	80007f4 <_write_r+0x20>
 80007f2:	6023      	str	r3, [r4, #0]
 80007f4:	bd70      	pop	{r4, r5, r6, pc}
 80007f6:	46c0      	nop			@ (mov r8, r8)
 80007f8:	200001b8 	.word	0x200001b8

080007fc <__errno>:
 80007fc:	4b01      	ldr	r3, [pc, #4]	@ (8000804 <__errno+0x8>)
 80007fe:	6818      	ldr	r0, [r3, #0]
 8000800:	4770      	bx	lr
 8000802:	46c0      	nop			@ (mov r8, r8)
 8000804:	2000000c 	.word	0x2000000c

08000808 <__libc_init_array>:
 8000808:	b570      	push	{r4, r5, r6, lr}
 800080a:	2600      	movs	r6, #0
 800080c:	4c0c      	ldr	r4, [pc, #48]	@ (8000840 <__libc_init_array+0x38>)
 800080e:	4d0d      	ldr	r5, [pc, #52]	@ (8000844 <__libc_init_array+0x3c>)
 8000810:	1b64      	subs	r4, r4, r5
 8000812:	10a4      	asrs	r4, r4, #2
 8000814:	42a6      	cmp	r6, r4
 8000816:	d109      	bne.n	800082c <__libc_init_array+0x24>
 8000818:	2600      	movs	r6, #0
 800081a:	f000 fdd9 	bl	80013d0 <_init>
 800081e:	4c0a      	ldr	r4, [pc, #40]	@ (8000848 <__libc_init_array+0x40>)
 8000820:	4d0a      	ldr	r5, [pc, #40]	@ (800084c <__libc_init_array+0x44>)
 8000822:	1b64      	subs	r4, r4, r5
 8000824:	10a4      	asrs	r4, r4, #2
 8000826:	42a6      	cmp	r6, r4
 8000828:	d105      	bne.n	8000836 <__libc_init_array+0x2e>
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	00b3      	lsls	r3, r6, #2
 800082e:	58eb      	ldr	r3, [r5, r3]
 8000830:	4798      	blx	r3
 8000832:	3601      	adds	r6, #1
 8000834:	e7ee      	b.n	8000814 <__libc_init_array+0xc>
 8000836:	00b3      	lsls	r3, r6, #2
 8000838:	58eb      	ldr	r3, [r5, r3]
 800083a:	4798      	blx	r3
 800083c:	3601      	adds	r6, #1
 800083e:	e7f2      	b.n	8000826 <__libc_init_array+0x1e>
 8000840:	08001424 	.word	0x08001424
 8000844:	08001424 	.word	0x08001424
 8000848:	08001428 	.word	0x08001428
 800084c:	08001424 	.word	0x08001424

08000850 <__retarget_lock_init_recursive>:
 8000850:	4770      	bx	lr

08000852 <__retarget_lock_acquire_recursive>:
 8000852:	4770      	bx	lr

08000854 <__retarget_lock_release_recursive>:
 8000854:	4770      	bx	lr
	...

08000858 <_free_r>:
 8000858:	b570      	push	{r4, r5, r6, lr}
 800085a:	0005      	movs	r5, r0
 800085c:	1e0c      	subs	r4, r1, #0
 800085e:	d010      	beq.n	8000882 <_free_r+0x2a>
 8000860:	3c04      	subs	r4, #4
 8000862:	6823      	ldr	r3, [r4, #0]
 8000864:	2b00      	cmp	r3, #0
 8000866:	da00      	bge.n	800086a <_free_r+0x12>
 8000868:	18e4      	adds	r4, r4, r3
 800086a:	0028      	movs	r0, r5
 800086c:	f000 f8e0 	bl	8000a30 <__malloc_lock>
 8000870:	4a1d      	ldr	r2, [pc, #116]	@ (80008e8 <_free_r+0x90>)
 8000872:	6813      	ldr	r3, [r2, #0]
 8000874:	2b00      	cmp	r3, #0
 8000876:	d105      	bne.n	8000884 <_free_r+0x2c>
 8000878:	6063      	str	r3, [r4, #4]
 800087a:	6014      	str	r4, [r2, #0]
 800087c:	0028      	movs	r0, r5
 800087e:	f000 f8df 	bl	8000a40 <__malloc_unlock>
 8000882:	bd70      	pop	{r4, r5, r6, pc}
 8000884:	42a3      	cmp	r3, r4
 8000886:	d908      	bls.n	800089a <_free_r+0x42>
 8000888:	6820      	ldr	r0, [r4, #0]
 800088a:	1821      	adds	r1, r4, r0
 800088c:	428b      	cmp	r3, r1
 800088e:	d1f3      	bne.n	8000878 <_free_r+0x20>
 8000890:	6819      	ldr	r1, [r3, #0]
 8000892:	685b      	ldr	r3, [r3, #4]
 8000894:	1809      	adds	r1, r1, r0
 8000896:	6021      	str	r1, [r4, #0]
 8000898:	e7ee      	b.n	8000878 <_free_r+0x20>
 800089a:	001a      	movs	r2, r3
 800089c:	685b      	ldr	r3, [r3, #4]
 800089e:	2b00      	cmp	r3, #0
 80008a0:	d001      	beq.n	80008a6 <_free_r+0x4e>
 80008a2:	42a3      	cmp	r3, r4
 80008a4:	d9f9      	bls.n	800089a <_free_r+0x42>
 80008a6:	6811      	ldr	r1, [r2, #0]
 80008a8:	1850      	adds	r0, r2, r1
 80008aa:	42a0      	cmp	r0, r4
 80008ac:	d10b      	bne.n	80008c6 <_free_r+0x6e>
 80008ae:	6820      	ldr	r0, [r4, #0]
 80008b0:	1809      	adds	r1, r1, r0
 80008b2:	1850      	adds	r0, r2, r1
 80008b4:	6011      	str	r1, [r2, #0]
 80008b6:	4283      	cmp	r3, r0
 80008b8:	d1e0      	bne.n	800087c <_free_r+0x24>
 80008ba:	6818      	ldr	r0, [r3, #0]
 80008bc:	685b      	ldr	r3, [r3, #4]
 80008be:	1841      	adds	r1, r0, r1
 80008c0:	6011      	str	r1, [r2, #0]
 80008c2:	6053      	str	r3, [r2, #4]
 80008c4:	e7da      	b.n	800087c <_free_r+0x24>
 80008c6:	42a0      	cmp	r0, r4
 80008c8:	d902      	bls.n	80008d0 <_free_r+0x78>
 80008ca:	230c      	movs	r3, #12
 80008cc:	602b      	str	r3, [r5, #0]
 80008ce:	e7d5      	b.n	800087c <_free_r+0x24>
 80008d0:	6820      	ldr	r0, [r4, #0]
 80008d2:	1821      	adds	r1, r4, r0
 80008d4:	428b      	cmp	r3, r1
 80008d6:	d103      	bne.n	80008e0 <_free_r+0x88>
 80008d8:	6819      	ldr	r1, [r3, #0]
 80008da:	685b      	ldr	r3, [r3, #4]
 80008dc:	1809      	adds	r1, r1, r0
 80008de:	6021      	str	r1, [r4, #0]
 80008e0:	6063      	str	r3, [r4, #4]
 80008e2:	6054      	str	r4, [r2, #4]
 80008e4:	e7ca      	b.n	800087c <_free_r+0x24>
 80008e6:	46c0      	nop			@ (mov r8, r8)
 80008e8:	200001c4 	.word	0x200001c4

080008ec <sbrk_aligned>:
 80008ec:	b570      	push	{r4, r5, r6, lr}
 80008ee:	4e0f      	ldr	r6, [pc, #60]	@ (800092c <sbrk_aligned+0x40>)
 80008f0:	000d      	movs	r5, r1
 80008f2:	6831      	ldr	r1, [r6, #0]
 80008f4:	0004      	movs	r4, r0
 80008f6:	2900      	cmp	r1, #0
 80008f8:	d102      	bne.n	8000900 <sbrk_aligned+0x14>
 80008fa:	f000 fcbb 	bl	8001274 <_sbrk_r>
 80008fe:	6030      	str	r0, [r6, #0]
 8000900:	0029      	movs	r1, r5
 8000902:	0020      	movs	r0, r4
 8000904:	f000 fcb6 	bl	8001274 <_sbrk_r>
 8000908:	1c43      	adds	r3, r0, #1
 800090a:	d103      	bne.n	8000914 <sbrk_aligned+0x28>
 800090c:	2501      	movs	r5, #1
 800090e:	426d      	negs	r5, r5
 8000910:	0028      	movs	r0, r5
 8000912:	bd70      	pop	{r4, r5, r6, pc}
 8000914:	2303      	movs	r3, #3
 8000916:	1cc5      	adds	r5, r0, #3
 8000918:	439d      	bics	r5, r3
 800091a:	42a8      	cmp	r0, r5
 800091c:	d0f8      	beq.n	8000910 <sbrk_aligned+0x24>
 800091e:	1a29      	subs	r1, r5, r0
 8000920:	0020      	movs	r0, r4
 8000922:	f000 fca7 	bl	8001274 <_sbrk_r>
 8000926:	3001      	adds	r0, #1
 8000928:	d1f2      	bne.n	8000910 <sbrk_aligned+0x24>
 800092a:	e7ef      	b.n	800090c <sbrk_aligned+0x20>
 800092c:	200001c0 	.word	0x200001c0

08000930 <_malloc_r>:
 8000930:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000932:	2203      	movs	r2, #3
 8000934:	1ccb      	adds	r3, r1, #3
 8000936:	4393      	bics	r3, r2
 8000938:	3308      	adds	r3, #8
 800093a:	0005      	movs	r5, r0
 800093c:	001f      	movs	r7, r3
 800093e:	2b0c      	cmp	r3, #12
 8000940:	d234      	bcs.n	80009ac <_malloc_r+0x7c>
 8000942:	270c      	movs	r7, #12
 8000944:	42b9      	cmp	r1, r7
 8000946:	d833      	bhi.n	80009b0 <_malloc_r+0x80>
 8000948:	0028      	movs	r0, r5
 800094a:	f000 f871 	bl	8000a30 <__malloc_lock>
 800094e:	4e37      	ldr	r6, [pc, #220]	@ (8000a2c <_malloc_r+0xfc>)
 8000950:	6833      	ldr	r3, [r6, #0]
 8000952:	001c      	movs	r4, r3
 8000954:	2c00      	cmp	r4, #0
 8000956:	d12f      	bne.n	80009b8 <_malloc_r+0x88>
 8000958:	0039      	movs	r1, r7
 800095a:	0028      	movs	r0, r5
 800095c:	f7ff ffc6 	bl	80008ec <sbrk_aligned>
 8000960:	0004      	movs	r4, r0
 8000962:	1c43      	adds	r3, r0, #1
 8000964:	d15f      	bne.n	8000a26 <_malloc_r+0xf6>
 8000966:	6834      	ldr	r4, [r6, #0]
 8000968:	9400      	str	r4, [sp, #0]
 800096a:	9b00      	ldr	r3, [sp, #0]
 800096c:	2b00      	cmp	r3, #0
 800096e:	d14a      	bne.n	8000a06 <_malloc_r+0xd6>
 8000970:	2c00      	cmp	r4, #0
 8000972:	d052      	beq.n	8000a1a <_malloc_r+0xea>
 8000974:	6823      	ldr	r3, [r4, #0]
 8000976:	0028      	movs	r0, r5
 8000978:	18e3      	adds	r3, r4, r3
 800097a:	9900      	ldr	r1, [sp, #0]
 800097c:	9301      	str	r3, [sp, #4]
 800097e:	f000 fc79 	bl	8001274 <_sbrk_r>
 8000982:	9b01      	ldr	r3, [sp, #4]
 8000984:	4283      	cmp	r3, r0
 8000986:	d148      	bne.n	8000a1a <_malloc_r+0xea>
 8000988:	6823      	ldr	r3, [r4, #0]
 800098a:	0028      	movs	r0, r5
 800098c:	1aff      	subs	r7, r7, r3
 800098e:	0039      	movs	r1, r7
 8000990:	f7ff ffac 	bl	80008ec <sbrk_aligned>
 8000994:	3001      	adds	r0, #1
 8000996:	d040      	beq.n	8000a1a <_malloc_r+0xea>
 8000998:	6823      	ldr	r3, [r4, #0]
 800099a:	19db      	adds	r3, r3, r7
 800099c:	6023      	str	r3, [r4, #0]
 800099e:	6833      	ldr	r3, [r6, #0]
 80009a0:	685a      	ldr	r2, [r3, #4]
 80009a2:	2a00      	cmp	r2, #0
 80009a4:	d133      	bne.n	8000a0e <_malloc_r+0xde>
 80009a6:	9b00      	ldr	r3, [sp, #0]
 80009a8:	6033      	str	r3, [r6, #0]
 80009aa:	e019      	b.n	80009e0 <_malloc_r+0xb0>
 80009ac:	2b00      	cmp	r3, #0
 80009ae:	dac9      	bge.n	8000944 <_malloc_r+0x14>
 80009b0:	230c      	movs	r3, #12
 80009b2:	602b      	str	r3, [r5, #0]
 80009b4:	2000      	movs	r0, #0
 80009b6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80009b8:	6821      	ldr	r1, [r4, #0]
 80009ba:	1bc9      	subs	r1, r1, r7
 80009bc:	d420      	bmi.n	8000a00 <_malloc_r+0xd0>
 80009be:	290b      	cmp	r1, #11
 80009c0:	d90a      	bls.n	80009d8 <_malloc_r+0xa8>
 80009c2:	19e2      	adds	r2, r4, r7
 80009c4:	6027      	str	r7, [r4, #0]
 80009c6:	42a3      	cmp	r3, r4
 80009c8:	d104      	bne.n	80009d4 <_malloc_r+0xa4>
 80009ca:	6032      	str	r2, [r6, #0]
 80009cc:	6863      	ldr	r3, [r4, #4]
 80009ce:	6011      	str	r1, [r2, #0]
 80009d0:	6053      	str	r3, [r2, #4]
 80009d2:	e005      	b.n	80009e0 <_malloc_r+0xb0>
 80009d4:	605a      	str	r2, [r3, #4]
 80009d6:	e7f9      	b.n	80009cc <_malloc_r+0x9c>
 80009d8:	6862      	ldr	r2, [r4, #4]
 80009da:	42a3      	cmp	r3, r4
 80009dc:	d10e      	bne.n	80009fc <_malloc_r+0xcc>
 80009de:	6032      	str	r2, [r6, #0]
 80009e0:	0028      	movs	r0, r5
 80009e2:	f000 f82d 	bl	8000a40 <__malloc_unlock>
 80009e6:	0020      	movs	r0, r4
 80009e8:	2207      	movs	r2, #7
 80009ea:	300b      	adds	r0, #11
 80009ec:	1d23      	adds	r3, r4, #4
 80009ee:	4390      	bics	r0, r2
 80009f0:	1ac2      	subs	r2, r0, r3
 80009f2:	4298      	cmp	r0, r3
 80009f4:	d0df      	beq.n	80009b6 <_malloc_r+0x86>
 80009f6:	1a1b      	subs	r3, r3, r0
 80009f8:	50a3      	str	r3, [r4, r2]
 80009fa:	e7dc      	b.n	80009b6 <_malloc_r+0x86>
 80009fc:	605a      	str	r2, [r3, #4]
 80009fe:	e7ef      	b.n	80009e0 <_malloc_r+0xb0>
 8000a00:	0023      	movs	r3, r4
 8000a02:	6864      	ldr	r4, [r4, #4]
 8000a04:	e7a6      	b.n	8000954 <_malloc_r+0x24>
 8000a06:	9c00      	ldr	r4, [sp, #0]
 8000a08:	6863      	ldr	r3, [r4, #4]
 8000a0a:	9300      	str	r3, [sp, #0]
 8000a0c:	e7ad      	b.n	800096a <_malloc_r+0x3a>
 8000a0e:	001a      	movs	r2, r3
 8000a10:	685b      	ldr	r3, [r3, #4]
 8000a12:	42a3      	cmp	r3, r4
 8000a14:	d1fb      	bne.n	8000a0e <_malloc_r+0xde>
 8000a16:	2300      	movs	r3, #0
 8000a18:	e7da      	b.n	80009d0 <_malloc_r+0xa0>
 8000a1a:	230c      	movs	r3, #12
 8000a1c:	0028      	movs	r0, r5
 8000a1e:	602b      	str	r3, [r5, #0]
 8000a20:	f000 f80e 	bl	8000a40 <__malloc_unlock>
 8000a24:	e7c6      	b.n	80009b4 <_malloc_r+0x84>
 8000a26:	6007      	str	r7, [r0, #0]
 8000a28:	e7da      	b.n	80009e0 <_malloc_r+0xb0>
 8000a2a:	46c0      	nop			@ (mov r8, r8)
 8000a2c:	200001c4 	.word	0x200001c4

08000a30 <__malloc_lock>:
 8000a30:	b510      	push	{r4, lr}
 8000a32:	4802      	ldr	r0, [pc, #8]	@ (8000a3c <__malloc_lock+0xc>)
 8000a34:	f7ff ff0d 	bl	8000852 <__retarget_lock_acquire_recursive>
 8000a38:	bd10      	pop	{r4, pc}
 8000a3a:	46c0      	nop			@ (mov r8, r8)
 8000a3c:	200001bc 	.word	0x200001bc

08000a40 <__malloc_unlock>:
 8000a40:	b510      	push	{r4, lr}
 8000a42:	4802      	ldr	r0, [pc, #8]	@ (8000a4c <__malloc_unlock+0xc>)
 8000a44:	f7ff ff06 	bl	8000854 <__retarget_lock_release_recursive>
 8000a48:	bd10      	pop	{r4, pc}
 8000a4a:	46c0      	nop			@ (mov r8, r8)
 8000a4c:	200001bc 	.word	0x200001bc

08000a50 <__sfputc_r>:
 8000a50:	6893      	ldr	r3, [r2, #8]
 8000a52:	b510      	push	{r4, lr}
 8000a54:	3b01      	subs	r3, #1
 8000a56:	6093      	str	r3, [r2, #8]
 8000a58:	2b00      	cmp	r3, #0
 8000a5a:	da04      	bge.n	8000a66 <__sfputc_r+0x16>
 8000a5c:	6994      	ldr	r4, [r2, #24]
 8000a5e:	42a3      	cmp	r3, r4
 8000a60:	db07      	blt.n	8000a72 <__sfputc_r+0x22>
 8000a62:	290a      	cmp	r1, #10
 8000a64:	d005      	beq.n	8000a72 <__sfputc_r+0x22>
 8000a66:	6813      	ldr	r3, [r2, #0]
 8000a68:	1c58      	adds	r0, r3, #1
 8000a6a:	6010      	str	r0, [r2, #0]
 8000a6c:	7019      	strb	r1, [r3, #0]
 8000a6e:	0008      	movs	r0, r1
 8000a70:	bd10      	pop	{r4, pc}
 8000a72:	f000 fb5e 	bl	8001132 <__swbuf_r>
 8000a76:	0001      	movs	r1, r0
 8000a78:	e7f9      	b.n	8000a6e <__sfputc_r+0x1e>

08000a7a <__sfputs_r>:
 8000a7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a7c:	0006      	movs	r6, r0
 8000a7e:	000f      	movs	r7, r1
 8000a80:	0014      	movs	r4, r2
 8000a82:	18d5      	adds	r5, r2, r3
 8000a84:	42ac      	cmp	r4, r5
 8000a86:	d101      	bne.n	8000a8c <__sfputs_r+0x12>
 8000a88:	2000      	movs	r0, #0
 8000a8a:	e007      	b.n	8000a9c <__sfputs_r+0x22>
 8000a8c:	7821      	ldrb	r1, [r4, #0]
 8000a8e:	003a      	movs	r2, r7
 8000a90:	0030      	movs	r0, r6
 8000a92:	f7ff ffdd 	bl	8000a50 <__sfputc_r>
 8000a96:	3401      	adds	r4, #1
 8000a98:	1c43      	adds	r3, r0, #1
 8000a9a:	d1f3      	bne.n	8000a84 <__sfputs_r+0xa>
 8000a9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000aa0 <_vfiprintf_r>:
 8000aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000aa2:	b0a1      	sub	sp, #132	@ 0x84
 8000aa4:	000f      	movs	r7, r1
 8000aa6:	0015      	movs	r5, r2
 8000aa8:	001e      	movs	r6, r3
 8000aaa:	9003      	str	r0, [sp, #12]
 8000aac:	2800      	cmp	r0, #0
 8000aae:	d004      	beq.n	8000aba <_vfiprintf_r+0x1a>
 8000ab0:	6a03      	ldr	r3, [r0, #32]
 8000ab2:	2b00      	cmp	r3, #0
 8000ab4:	d101      	bne.n	8000aba <_vfiprintf_r+0x1a>
 8000ab6:	f7ff fdbb 	bl	8000630 <__sinit>
 8000aba:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000abc:	07db      	lsls	r3, r3, #31
 8000abe:	d405      	bmi.n	8000acc <_vfiprintf_r+0x2c>
 8000ac0:	89bb      	ldrh	r3, [r7, #12]
 8000ac2:	059b      	lsls	r3, r3, #22
 8000ac4:	d402      	bmi.n	8000acc <_vfiprintf_r+0x2c>
 8000ac6:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000ac8:	f7ff fec3 	bl	8000852 <__retarget_lock_acquire_recursive>
 8000acc:	89bb      	ldrh	r3, [r7, #12]
 8000ace:	071b      	lsls	r3, r3, #28
 8000ad0:	d502      	bpl.n	8000ad8 <_vfiprintf_r+0x38>
 8000ad2:	693b      	ldr	r3, [r7, #16]
 8000ad4:	2b00      	cmp	r3, #0
 8000ad6:	d113      	bne.n	8000b00 <_vfiprintf_r+0x60>
 8000ad8:	0039      	movs	r1, r7
 8000ada:	9803      	ldr	r0, [sp, #12]
 8000adc:	f000 fb6c 	bl	80011b8 <__swsetup_r>
 8000ae0:	2800      	cmp	r0, #0
 8000ae2:	d00d      	beq.n	8000b00 <_vfiprintf_r+0x60>
 8000ae4:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000ae6:	07db      	lsls	r3, r3, #31
 8000ae8:	d503      	bpl.n	8000af2 <_vfiprintf_r+0x52>
 8000aea:	2001      	movs	r0, #1
 8000aec:	4240      	negs	r0, r0
 8000aee:	b021      	add	sp, #132	@ 0x84
 8000af0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000af2:	89bb      	ldrh	r3, [r7, #12]
 8000af4:	059b      	lsls	r3, r3, #22
 8000af6:	d4f8      	bmi.n	8000aea <_vfiprintf_r+0x4a>
 8000af8:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000afa:	f7ff feab 	bl	8000854 <__retarget_lock_release_recursive>
 8000afe:	e7f4      	b.n	8000aea <_vfiprintf_r+0x4a>
 8000b00:	2300      	movs	r3, #0
 8000b02:	ac08      	add	r4, sp, #32
 8000b04:	6163      	str	r3, [r4, #20]
 8000b06:	3320      	adds	r3, #32
 8000b08:	7663      	strb	r3, [r4, #25]
 8000b0a:	3310      	adds	r3, #16
 8000b0c:	76a3      	strb	r3, [r4, #26]
 8000b0e:	9607      	str	r6, [sp, #28]
 8000b10:	002e      	movs	r6, r5
 8000b12:	7833      	ldrb	r3, [r6, #0]
 8000b14:	2b00      	cmp	r3, #0
 8000b16:	d001      	beq.n	8000b1c <_vfiprintf_r+0x7c>
 8000b18:	2b25      	cmp	r3, #37	@ 0x25
 8000b1a:	d148      	bne.n	8000bae <_vfiprintf_r+0x10e>
 8000b1c:	1b73      	subs	r3, r6, r5
 8000b1e:	9305      	str	r3, [sp, #20]
 8000b20:	42ae      	cmp	r6, r5
 8000b22:	d00b      	beq.n	8000b3c <_vfiprintf_r+0x9c>
 8000b24:	002a      	movs	r2, r5
 8000b26:	0039      	movs	r1, r7
 8000b28:	9803      	ldr	r0, [sp, #12]
 8000b2a:	f7ff ffa6 	bl	8000a7a <__sfputs_r>
 8000b2e:	3001      	adds	r0, #1
 8000b30:	d100      	bne.n	8000b34 <_vfiprintf_r+0x94>
 8000b32:	e0ae      	b.n	8000c92 <_vfiprintf_r+0x1f2>
 8000b34:	6963      	ldr	r3, [r4, #20]
 8000b36:	9a05      	ldr	r2, [sp, #20]
 8000b38:	189b      	adds	r3, r3, r2
 8000b3a:	6163      	str	r3, [r4, #20]
 8000b3c:	7833      	ldrb	r3, [r6, #0]
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	d100      	bne.n	8000b44 <_vfiprintf_r+0xa4>
 8000b42:	e0a6      	b.n	8000c92 <_vfiprintf_r+0x1f2>
 8000b44:	2201      	movs	r2, #1
 8000b46:	2300      	movs	r3, #0
 8000b48:	4252      	negs	r2, r2
 8000b4a:	6062      	str	r2, [r4, #4]
 8000b4c:	a904      	add	r1, sp, #16
 8000b4e:	3254      	adds	r2, #84	@ 0x54
 8000b50:	1852      	adds	r2, r2, r1
 8000b52:	1c75      	adds	r5, r6, #1
 8000b54:	6023      	str	r3, [r4, #0]
 8000b56:	60e3      	str	r3, [r4, #12]
 8000b58:	60a3      	str	r3, [r4, #8]
 8000b5a:	7013      	strb	r3, [r2, #0]
 8000b5c:	65a3      	str	r3, [r4, #88]	@ 0x58
 8000b5e:	4b59      	ldr	r3, [pc, #356]	@ (8000cc4 <_vfiprintf_r+0x224>)
 8000b60:	2205      	movs	r2, #5
 8000b62:	0018      	movs	r0, r3
 8000b64:	7829      	ldrb	r1, [r5, #0]
 8000b66:	9305      	str	r3, [sp, #20]
 8000b68:	f000 fb96 	bl	8001298 <memchr>
 8000b6c:	1c6e      	adds	r6, r5, #1
 8000b6e:	2800      	cmp	r0, #0
 8000b70:	d11f      	bne.n	8000bb2 <_vfiprintf_r+0x112>
 8000b72:	6822      	ldr	r2, [r4, #0]
 8000b74:	06d3      	lsls	r3, r2, #27
 8000b76:	d504      	bpl.n	8000b82 <_vfiprintf_r+0xe2>
 8000b78:	2353      	movs	r3, #83	@ 0x53
 8000b7a:	a904      	add	r1, sp, #16
 8000b7c:	185b      	adds	r3, r3, r1
 8000b7e:	2120      	movs	r1, #32
 8000b80:	7019      	strb	r1, [r3, #0]
 8000b82:	0713      	lsls	r3, r2, #28
 8000b84:	d504      	bpl.n	8000b90 <_vfiprintf_r+0xf0>
 8000b86:	2353      	movs	r3, #83	@ 0x53
 8000b88:	a904      	add	r1, sp, #16
 8000b8a:	185b      	adds	r3, r3, r1
 8000b8c:	212b      	movs	r1, #43	@ 0x2b
 8000b8e:	7019      	strb	r1, [r3, #0]
 8000b90:	782b      	ldrb	r3, [r5, #0]
 8000b92:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b94:	d016      	beq.n	8000bc4 <_vfiprintf_r+0x124>
 8000b96:	002e      	movs	r6, r5
 8000b98:	2100      	movs	r1, #0
 8000b9a:	200a      	movs	r0, #10
 8000b9c:	68e3      	ldr	r3, [r4, #12]
 8000b9e:	7832      	ldrb	r2, [r6, #0]
 8000ba0:	1c75      	adds	r5, r6, #1
 8000ba2:	3a30      	subs	r2, #48	@ 0x30
 8000ba4:	2a09      	cmp	r2, #9
 8000ba6:	d950      	bls.n	8000c4a <_vfiprintf_r+0x1aa>
 8000ba8:	2900      	cmp	r1, #0
 8000baa:	d111      	bne.n	8000bd0 <_vfiprintf_r+0x130>
 8000bac:	e017      	b.n	8000bde <_vfiprintf_r+0x13e>
 8000bae:	3601      	adds	r6, #1
 8000bb0:	e7af      	b.n	8000b12 <_vfiprintf_r+0x72>
 8000bb2:	9b05      	ldr	r3, [sp, #20]
 8000bb4:	6822      	ldr	r2, [r4, #0]
 8000bb6:	1ac0      	subs	r0, r0, r3
 8000bb8:	2301      	movs	r3, #1
 8000bba:	4083      	lsls	r3, r0
 8000bbc:	4313      	orrs	r3, r2
 8000bbe:	0035      	movs	r5, r6
 8000bc0:	6023      	str	r3, [r4, #0]
 8000bc2:	e7cc      	b.n	8000b5e <_vfiprintf_r+0xbe>
 8000bc4:	9b07      	ldr	r3, [sp, #28]
 8000bc6:	1d19      	adds	r1, r3, #4
 8000bc8:	681b      	ldr	r3, [r3, #0]
 8000bca:	9107      	str	r1, [sp, #28]
 8000bcc:	2b00      	cmp	r3, #0
 8000bce:	db01      	blt.n	8000bd4 <_vfiprintf_r+0x134>
 8000bd0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8000bd2:	e004      	b.n	8000bde <_vfiprintf_r+0x13e>
 8000bd4:	425b      	negs	r3, r3
 8000bd6:	60e3      	str	r3, [r4, #12]
 8000bd8:	2302      	movs	r3, #2
 8000bda:	4313      	orrs	r3, r2
 8000bdc:	6023      	str	r3, [r4, #0]
 8000bde:	7833      	ldrb	r3, [r6, #0]
 8000be0:	2b2e      	cmp	r3, #46	@ 0x2e
 8000be2:	d10c      	bne.n	8000bfe <_vfiprintf_r+0x15e>
 8000be4:	7873      	ldrb	r3, [r6, #1]
 8000be6:	2b2a      	cmp	r3, #42	@ 0x2a
 8000be8:	d134      	bne.n	8000c54 <_vfiprintf_r+0x1b4>
 8000bea:	9b07      	ldr	r3, [sp, #28]
 8000bec:	3602      	adds	r6, #2
 8000bee:	1d1a      	adds	r2, r3, #4
 8000bf0:	681b      	ldr	r3, [r3, #0]
 8000bf2:	9207      	str	r2, [sp, #28]
 8000bf4:	2b00      	cmp	r3, #0
 8000bf6:	da01      	bge.n	8000bfc <_vfiprintf_r+0x15c>
 8000bf8:	2301      	movs	r3, #1
 8000bfa:	425b      	negs	r3, r3
 8000bfc:	9309      	str	r3, [sp, #36]	@ 0x24
 8000bfe:	4d32      	ldr	r5, [pc, #200]	@ (8000cc8 <_vfiprintf_r+0x228>)
 8000c00:	2203      	movs	r2, #3
 8000c02:	0028      	movs	r0, r5
 8000c04:	7831      	ldrb	r1, [r6, #0]
 8000c06:	f000 fb47 	bl	8001298 <memchr>
 8000c0a:	2800      	cmp	r0, #0
 8000c0c:	d006      	beq.n	8000c1c <_vfiprintf_r+0x17c>
 8000c0e:	2340      	movs	r3, #64	@ 0x40
 8000c10:	1b40      	subs	r0, r0, r5
 8000c12:	4083      	lsls	r3, r0
 8000c14:	6822      	ldr	r2, [r4, #0]
 8000c16:	3601      	adds	r6, #1
 8000c18:	4313      	orrs	r3, r2
 8000c1a:	6023      	str	r3, [r4, #0]
 8000c1c:	7831      	ldrb	r1, [r6, #0]
 8000c1e:	2206      	movs	r2, #6
 8000c20:	482a      	ldr	r0, [pc, #168]	@ (8000ccc <_vfiprintf_r+0x22c>)
 8000c22:	1c75      	adds	r5, r6, #1
 8000c24:	7621      	strb	r1, [r4, #24]
 8000c26:	f000 fb37 	bl	8001298 <memchr>
 8000c2a:	2800      	cmp	r0, #0
 8000c2c:	d040      	beq.n	8000cb0 <_vfiprintf_r+0x210>
 8000c2e:	4b28      	ldr	r3, [pc, #160]	@ (8000cd0 <_vfiprintf_r+0x230>)
 8000c30:	2b00      	cmp	r3, #0
 8000c32:	d122      	bne.n	8000c7a <_vfiprintf_r+0x1da>
 8000c34:	2207      	movs	r2, #7
 8000c36:	9b07      	ldr	r3, [sp, #28]
 8000c38:	3307      	adds	r3, #7
 8000c3a:	4393      	bics	r3, r2
 8000c3c:	3308      	adds	r3, #8
 8000c3e:	9307      	str	r3, [sp, #28]
 8000c40:	6963      	ldr	r3, [r4, #20]
 8000c42:	9a04      	ldr	r2, [sp, #16]
 8000c44:	189b      	adds	r3, r3, r2
 8000c46:	6163      	str	r3, [r4, #20]
 8000c48:	e762      	b.n	8000b10 <_vfiprintf_r+0x70>
 8000c4a:	4343      	muls	r3, r0
 8000c4c:	002e      	movs	r6, r5
 8000c4e:	2101      	movs	r1, #1
 8000c50:	189b      	adds	r3, r3, r2
 8000c52:	e7a4      	b.n	8000b9e <_vfiprintf_r+0xfe>
 8000c54:	2300      	movs	r3, #0
 8000c56:	200a      	movs	r0, #10
 8000c58:	0019      	movs	r1, r3
 8000c5a:	3601      	adds	r6, #1
 8000c5c:	6063      	str	r3, [r4, #4]
 8000c5e:	7832      	ldrb	r2, [r6, #0]
 8000c60:	1c75      	adds	r5, r6, #1
 8000c62:	3a30      	subs	r2, #48	@ 0x30
 8000c64:	2a09      	cmp	r2, #9
 8000c66:	d903      	bls.n	8000c70 <_vfiprintf_r+0x1d0>
 8000c68:	2b00      	cmp	r3, #0
 8000c6a:	d0c8      	beq.n	8000bfe <_vfiprintf_r+0x15e>
 8000c6c:	9109      	str	r1, [sp, #36]	@ 0x24
 8000c6e:	e7c6      	b.n	8000bfe <_vfiprintf_r+0x15e>
 8000c70:	4341      	muls	r1, r0
 8000c72:	002e      	movs	r6, r5
 8000c74:	2301      	movs	r3, #1
 8000c76:	1889      	adds	r1, r1, r2
 8000c78:	e7f1      	b.n	8000c5e <_vfiprintf_r+0x1be>
 8000c7a:	aa07      	add	r2, sp, #28
 8000c7c:	9200      	str	r2, [sp, #0]
 8000c7e:	0021      	movs	r1, r4
 8000c80:	003a      	movs	r2, r7
 8000c82:	4b14      	ldr	r3, [pc, #80]	@ (8000cd4 <_vfiprintf_r+0x234>)
 8000c84:	9803      	ldr	r0, [sp, #12]
 8000c86:	e000      	b.n	8000c8a <_vfiprintf_r+0x1ea>
 8000c88:	bf00      	nop
 8000c8a:	9004      	str	r0, [sp, #16]
 8000c8c:	9b04      	ldr	r3, [sp, #16]
 8000c8e:	3301      	adds	r3, #1
 8000c90:	d1d6      	bne.n	8000c40 <_vfiprintf_r+0x1a0>
 8000c92:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000c94:	07db      	lsls	r3, r3, #31
 8000c96:	d405      	bmi.n	8000ca4 <_vfiprintf_r+0x204>
 8000c98:	89bb      	ldrh	r3, [r7, #12]
 8000c9a:	059b      	lsls	r3, r3, #22
 8000c9c:	d402      	bmi.n	8000ca4 <_vfiprintf_r+0x204>
 8000c9e:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000ca0:	f7ff fdd8 	bl	8000854 <__retarget_lock_release_recursive>
 8000ca4:	89bb      	ldrh	r3, [r7, #12]
 8000ca6:	065b      	lsls	r3, r3, #25
 8000ca8:	d500      	bpl.n	8000cac <_vfiprintf_r+0x20c>
 8000caa:	e71e      	b.n	8000aea <_vfiprintf_r+0x4a>
 8000cac:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8000cae:	e71e      	b.n	8000aee <_vfiprintf_r+0x4e>
 8000cb0:	aa07      	add	r2, sp, #28
 8000cb2:	9200      	str	r2, [sp, #0]
 8000cb4:	0021      	movs	r1, r4
 8000cb6:	003a      	movs	r2, r7
 8000cb8:	4b06      	ldr	r3, [pc, #24]	@ (8000cd4 <_vfiprintf_r+0x234>)
 8000cba:	9803      	ldr	r0, [sp, #12]
 8000cbc:	f000 f87c 	bl	8000db8 <_printf_i>
 8000cc0:	e7e3      	b.n	8000c8a <_vfiprintf_r+0x1ea>
 8000cc2:	46c0      	nop			@ (mov r8, r8)
 8000cc4:	080013f0 	.word	0x080013f0
 8000cc8:	080013f6 	.word	0x080013f6
 8000ccc:	080013fa 	.word	0x080013fa
 8000cd0:	00000000 	.word	0x00000000
 8000cd4:	08000a7b 	.word	0x08000a7b

08000cd8 <_printf_common>:
 8000cd8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000cda:	0016      	movs	r6, r2
 8000cdc:	9301      	str	r3, [sp, #4]
 8000cde:	688a      	ldr	r2, [r1, #8]
 8000ce0:	690b      	ldr	r3, [r1, #16]
 8000ce2:	000c      	movs	r4, r1
 8000ce4:	9000      	str	r0, [sp, #0]
 8000ce6:	4293      	cmp	r3, r2
 8000ce8:	da00      	bge.n	8000cec <_printf_common+0x14>
 8000cea:	0013      	movs	r3, r2
 8000cec:	0022      	movs	r2, r4
 8000cee:	6033      	str	r3, [r6, #0]
 8000cf0:	3243      	adds	r2, #67	@ 0x43
 8000cf2:	7812      	ldrb	r2, [r2, #0]
 8000cf4:	2a00      	cmp	r2, #0
 8000cf6:	d001      	beq.n	8000cfc <_printf_common+0x24>
 8000cf8:	3301      	adds	r3, #1
 8000cfa:	6033      	str	r3, [r6, #0]
 8000cfc:	6823      	ldr	r3, [r4, #0]
 8000cfe:	069b      	lsls	r3, r3, #26
 8000d00:	d502      	bpl.n	8000d08 <_printf_common+0x30>
 8000d02:	6833      	ldr	r3, [r6, #0]
 8000d04:	3302      	adds	r3, #2
 8000d06:	6033      	str	r3, [r6, #0]
 8000d08:	6822      	ldr	r2, [r4, #0]
 8000d0a:	2306      	movs	r3, #6
 8000d0c:	0015      	movs	r5, r2
 8000d0e:	401d      	ands	r5, r3
 8000d10:	421a      	tst	r2, r3
 8000d12:	d027      	beq.n	8000d64 <_printf_common+0x8c>
 8000d14:	0023      	movs	r3, r4
 8000d16:	3343      	adds	r3, #67	@ 0x43
 8000d18:	781b      	ldrb	r3, [r3, #0]
 8000d1a:	1e5a      	subs	r2, r3, #1
 8000d1c:	4193      	sbcs	r3, r2
 8000d1e:	6822      	ldr	r2, [r4, #0]
 8000d20:	0692      	lsls	r2, r2, #26
 8000d22:	d430      	bmi.n	8000d86 <_printf_common+0xae>
 8000d24:	0022      	movs	r2, r4
 8000d26:	9901      	ldr	r1, [sp, #4]
 8000d28:	9800      	ldr	r0, [sp, #0]
 8000d2a:	9d08      	ldr	r5, [sp, #32]
 8000d2c:	3243      	adds	r2, #67	@ 0x43
 8000d2e:	47a8      	blx	r5
 8000d30:	3001      	adds	r0, #1
 8000d32:	d025      	beq.n	8000d80 <_printf_common+0xa8>
 8000d34:	2206      	movs	r2, #6
 8000d36:	6823      	ldr	r3, [r4, #0]
 8000d38:	2500      	movs	r5, #0
 8000d3a:	4013      	ands	r3, r2
 8000d3c:	2b04      	cmp	r3, #4
 8000d3e:	d105      	bne.n	8000d4c <_printf_common+0x74>
 8000d40:	6833      	ldr	r3, [r6, #0]
 8000d42:	68e5      	ldr	r5, [r4, #12]
 8000d44:	1aed      	subs	r5, r5, r3
 8000d46:	43eb      	mvns	r3, r5
 8000d48:	17db      	asrs	r3, r3, #31
 8000d4a:	401d      	ands	r5, r3
 8000d4c:	68a3      	ldr	r3, [r4, #8]
 8000d4e:	6922      	ldr	r2, [r4, #16]
 8000d50:	4293      	cmp	r3, r2
 8000d52:	dd01      	ble.n	8000d58 <_printf_common+0x80>
 8000d54:	1a9b      	subs	r3, r3, r2
 8000d56:	18ed      	adds	r5, r5, r3
 8000d58:	2600      	movs	r6, #0
 8000d5a:	42b5      	cmp	r5, r6
 8000d5c:	d120      	bne.n	8000da0 <_printf_common+0xc8>
 8000d5e:	2000      	movs	r0, #0
 8000d60:	e010      	b.n	8000d84 <_printf_common+0xac>
 8000d62:	3501      	adds	r5, #1
 8000d64:	68e3      	ldr	r3, [r4, #12]
 8000d66:	6832      	ldr	r2, [r6, #0]
 8000d68:	1a9b      	subs	r3, r3, r2
 8000d6a:	42ab      	cmp	r3, r5
 8000d6c:	ddd2      	ble.n	8000d14 <_printf_common+0x3c>
 8000d6e:	0022      	movs	r2, r4
 8000d70:	2301      	movs	r3, #1
 8000d72:	9901      	ldr	r1, [sp, #4]
 8000d74:	9800      	ldr	r0, [sp, #0]
 8000d76:	9f08      	ldr	r7, [sp, #32]
 8000d78:	3219      	adds	r2, #25
 8000d7a:	47b8      	blx	r7
 8000d7c:	3001      	adds	r0, #1
 8000d7e:	d1f0      	bne.n	8000d62 <_printf_common+0x8a>
 8000d80:	2001      	movs	r0, #1
 8000d82:	4240      	negs	r0, r0
 8000d84:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000d86:	2030      	movs	r0, #48	@ 0x30
 8000d88:	18e1      	adds	r1, r4, r3
 8000d8a:	3143      	adds	r1, #67	@ 0x43
 8000d8c:	7008      	strb	r0, [r1, #0]
 8000d8e:	0021      	movs	r1, r4
 8000d90:	1c5a      	adds	r2, r3, #1
 8000d92:	3145      	adds	r1, #69	@ 0x45
 8000d94:	7809      	ldrb	r1, [r1, #0]
 8000d96:	18a2      	adds	r2, r4, r2
 8000d98:	3243      	adds	r2, #67	@ 0x43
 8000d9a:	3302      	adds	r3, #2
 8000d9c:	7011      	strb	r1, [r2, #0]
 8000d9e:	e7c1      	b.n	8000d24 <_printf_common+0x4c>
 8000da0:	0022      	movs	r2, r4
 8000da2:	2301      	movs	r3, #1
 8000da4:	9901      	ldr	r1, [sp, #4]
 8000da6:	9800      	ldr	r0, [sp, #0]
 8000da8:	9f08      	ldr	r7, [sp, #32]
 8000daa:	321a      	adds	r2, #26
 8000dac:	47b8      	blx	r7
 8000dae:	3001      	adds	r0, #1
 8000db0:	d0e6      	beq.n	8000d80 <_printf_common+0xa8>
 8000db2:	3601      	adds	r6, #1
 8000db4:	e7d1      	b.n	8000d5a <_printf_common+0x82>
	...

08000db8 <_printf_i>:
 8000db8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000dba:	b08b      	sub	sp, #44	@ 0x2c
 8000dbc:	9206      	str	r2, [sp, #24]
 8000dbe:	000a      	movs	r2, r1
 8000dc0:	3243      	adds	r2, #67	@ 0x43
 8000dc2:	9307      	str	r3, [sp, #28]
 8000dc4:	9005      	str	r0, [sp, #20]
 8000dc6:	9203      	str	r2, [sp, #12]
 8000dc8:	7e0a      	ldrb	r2, [r1, #24]
 8000dca:	000c      	movs	r4, r1
 8000dcc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8000dce:	2a78      	cmp	r2, #120	@ 0x78
 8000dd0:	d809      	bhi.n	8000de6 <_printf_i+0x2e>
 8000dd2:	2a62      	cmp	r2, #98	@ 0x62
 8000dd4:	d80b      	bhi.n	8000dee <_printf_i+0x36>
 8000dd6:	2a00      	cmp	r2, #0
 8000dd8:	d100      	bne.n	8000ddc <_printf_i+0x24>
 8000dda:	e0ba      	b.n	8000f52 <_printf_i+0x19a>
 8000ddc:	497a      	ldr	r1, [pc, #488]	@ (8000fc8 <_printf_i+0x210>)
 8000dde:	9104      	str	r1, [sp, #16]
 8000de0:	2a58      	cmp	r2, #88	@ 0x58
 8000de2:	d100      	bne.n	8000de6 <_printf_i+0x2e>
 8000de4:	e08e      	b.n	8000f04 <_printf_i+0x14c>
 8000de6:	0025      	movs	r5, r4
 8000de8:	3542      	adds	r5, #66	@ 0x42
 8000dea:	702a      	strb	r2, [r5, #0]
 8000dec:	e022      	b.n	8000e34 <_printf_i+0x7c>
 8000dee:	0010      	movs	r0, r2
 8000df0:	3863      	subs	r0, #99	@ 0x63
 8000df2:	2815      	cmp	r0, #21
 8000df4:	d8f7      	bhi.n	8000de6 <_printf_i+0x2e>
 8000df6:	f7ff f981 	bl	80000fc <__gnu_thumb1_case_shi>
 8000dfa:	0016      	.short	0x0016
 8000dfc:	fff6001f 	.word	0xfff6001f
 8000e00:	fff6fff6 	.word	0xfff6fff6
 8000e04:	001ffff6 	.word	0x001ffff6
 8000e08:	fff6fff6 	.word	0xfff6fff6
 8000e0c:	fff6fff6 	.word	0xfff6fff6
 8000e10:	0036009f 	.word	0x0036009f
 8000e14:	fff6007e 	.word	0xfff6007e
 8000e18:	00b0fff6 	.word	0x00b0fff6
 8000e1c:	0036fff6 	.word	0x0036fff6
 8000e20:	fff6fff6 	.word	0xfff6fff6
 8000e24:	0082      	.short	0x0082
 8000e26:	0025      	movs	r5, r4
 8000e28:	681a      	ldr	r2, [r3, #0]
 8000e2a:	3542      	adds	r5, #66	@ 0x42
 8000e2c:	1d11      	adds	r1, r2, #4
 8000e2e:	6019      	str	r1, [r3, #0]
 8000e30:	6813      	ldr	r3, [r2, #0]
 8000e32:	702b      	strb	r3, [r5, #0]
 8000e34:	2301      	movs	r3, #1
 8000e36:	e09e      	b.n	8000f76 <_printf_i+0x1be>
 8000e38:	6818      	ldr	r0, [r3, #0]
 8000e3a:	6809      	ldr	r1, [r1, #0]
 8000e3c:	1d02      	adds	r2, r0, #4
 8000e3e:	060d      	lsls	r5, r1, #24
 8000e40:	d50b      	bpl.n	8000e5a <_printf_i+0xa2>
 8000e42:	6806      	ldr	r6, [r0, #0]
 8000e44:	601a      	str	r2, [r3, #0]
 8000e46:	2e00      	cmp	r6, #0
 8000e48:	da03      	bge.n	8000e52 <_printf_i+0x9a>
 8000e4a:	232d      	movs	r3, #45	@ 0x2d
 8000e4c:	9a03      	ldr	r2, [sp, #12]
 8000e4e:	4276      	negs	r6, r6
 8000e50:	7013      	strb	r3, [r2, #0]
 8000e52:	4b5d      	ldr	r3, [pc, #372]	@ (8000fc8 <_printf_i+0x210>)
 8000e54:	270a      	movs	r7, #10
 8000e56:	9304      	str	r3, [sp, #16]
 8000e58:	e018      	b.n	8000e8c <_printf_i+0xd4>
 8000e5a:	6806      	ldr	r6, [r0, #0]
 8000e5c:	601a      	str	r2, [r3, #0]
 8000e5e:	0649      	lsls	r1, r1, #25
 8000e60:	d5f1      	bpl.n	8000e46 <_printf_i+0x8e>
 8000e62:	b236      	sxth	r6, r6
 8000e64:	e7ef      	b.n	8000e46 <_printf_i+0x8e>
 8000e66:	6808      	ldr	r0, [r1, #0]
 8000e68:	6819      	ldr	r1, [r3, #0]
 8000e6a:	c940      	ldmia	r1!, {r6}
 8000e6c:	0605      	lsls	r5, r0, #24
 8000e6e:	d402      	bmi.n	8000e76 <_printf_i+0xbe>
 8000e70:	0640      	lsls	r0, r0, #25
 8000e72:	d500      	bpl.n	8000e76 <_printf_i+0xbe>
 8000e74:	b2b6      	uxth	r6, r6
 8000e76:	6019      	str	r1, [r3, #0]
 8000e78:	4b53      	ldr	r3, [pc, #332]	@ (8000fc8 <_printf_i+0x210>)
 8000e7a:	270a      	movs	r7, #10
 8000e7c:	9304      	str	r3, [sp, #16]
 8000e7e:	2a6f      	cmp	r2, #111	@ 0x6f
 8000e80:	d100      	bne.n	8000e84 <_printf_i+0xcc>
 8000e82:	3f02      	subs	r7, #2
 8000e84:	0023      	movs	r3, r4
 8000e86:	2200      	movs	r2, #0
 8000e88:	3343      	adds	r3, #67	@ 0x43
 8000e8a:	701a      	strb	r2, [r3, #0]
 8000e8c:	6863      	ldr	r3, [r4, #4]
 8000e8e:	60a3      	str	r3, [r4, #8]
 8000e90:	2b00      	cmp	r3, #0
 8000e92:	db06      	blt.n	8000ea2 <_printf_i+0xea>
 8000e94:	2104      	movs	r1, #4
 8000e96:	6822      	ldr	r2, [r4, #0]
 8000e98:	9d03      	ldr	r5, [sp, #12]
 8000e9a:	438a      	bics	r2, r1
 8000e9c:	6022      	str	r2, [r4, #0]
 8000e9e:	4333      	orrs	r3, r6
 8000ea0:	d00c      	beq.n	8000ebc <_printf_i+0x104>
 8000ea2:	9d03      	ldr	r5, [sp, #12]
 8000ea4:	0030      	movs	r0, r6
 8000ea6:	0039      	movs	r1, r7
 8000ea8:	f7ff f9b8 	bl	800021c <__aeabi_uidivmod>
 8000eac:	9b04      	ldr	r3, [sp, #16]
 8000eae:	3d01      	subs	r5, #1
 8000eb0:	5c5b      	ldrb	r3, [r3, r1]
 8000eb2:	702b      	strb	r3, [r5, #0]
 8000eb4:	0033      	movs	r3, r6
 8000eb6:	0006      	movs	r6, r0
 8000eb8:	429f      	cmp	r7, r3
 8000eba:	d9f3      	bls.n	8000ea4 <_printf_i+0xec>
 8000ebc:	2f08      	cmp	r7, #8
 8000ebe:	d109      	bne.n	8000ed4 <_printf_i+0x11c>
 8000ec0:	6823      	ldr	r3, [r4, #0]
 8000ec2:	07db      	lsls	r3, r3, #31
 8000ec4:	d506      	bpl.n	8000ed4 <_printf_i+0x11c>
 8000ec6:	6862      	ldr	r2, [r4, #4]
 8000ec8:	6923      	ldr	r3, [r4, #16]
 8000eca:	429a      	cmp	r2, r3
 8000ecc:	dc02      	bgt.n	8000ed4 <_printf_i+0x11c>
 8000ece:	2330      	movs	r3, #48	@ 0x30
 8000ed0:	3d01      	subs	r5, #1
 8000ed2:	702b      	strb	r3, [r5, #0]
 8000ed4:	9b03      	ldr	r3, [sp, #12]
 8000ed6:	1b5b      	subs	r3, r3, r5
 8000ed8:	6123      	str	r3, [r4, #16]
 8000eda:	9b07      	ldr	r3, [sp, #28]
 8000edc:	0021      	movs	r1, r4
 8000ede:	9300      	str	r3, [sp, #0]
 8000ee0:	9805      	ldr	r0, [sp, #20]
 8000ee2:	9b06      	ldr	r3, [sp, #24]
 8000ee4:	aa09      	add	r2, sp, #36	@ 0x24
 8000ee6:	f7ff fef7 	bl	8000cd8 <_printf_common>
 8000eea:	3001      	adds	r0, #1
 8000eec:	d148      	bne.n	8000f80 <_printf_i+0x1c8>
 8000eee:	2001      	movs	r0, #1
 8000ef0:	4240      	negs	r0, r0
 8000ef2:	b00b      	add	sp, #44	@ 0x2c
 8000ef4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ef6:	2220      	movs	r2, #32
 8000ef8:	6809      	ldr	r1, [r1, #0]
 8000efa:	430a      	orrs	r2, r1
 8000efc:	6022      	str	r2, [r4, #0]
 8000efe:	2278      	movs	r2, #120	@ 0x78
 8000f00:	4932      	ldr	r1, [pc, #200]	@ (8000fcc <_printf_i+0x214>)
 8000f02:	9104      	str	r1, [sp, #16]
 8000f04:	0021      	movs	r1, r4
 8000f06:	3145      	adds	r1, #69	@ 0x45
 8000f08:	700a      	strb	r2, [r1, #0]
 8000f0a:	6819      	ldr	r1, [r3, #0]
 8000f0c:	6822      	ldr	r2, [r4, #0]
 8000f0e:	c940      	ldmia	r1!, {r6}
 8000f10:	0610      	lsls	r0, r2, #24
 8000f12:	d402      	bmi.n	8000f1a <_printf_i+0x162>
 8000f14:	0650      	lsls	r0, r2, #25
 8000f16:	d500      	bpl.n	8000f1a <_printf_i+0x162>
 8000f18:	b2b6      	uxth	r6, r6
 8000f1a:	6019      	str	r1, [r3, #0]
 8000f1c:	07d3      	lsls	r3, r2, #31
 8000f1e:	d502      	bpl.n	8000f26 <_printf_i+0x16e>
 8000f20:	2320      	movs	r3, #32
 8000f22:	4313      	orrs	r3, r2
 8000f24:	6023      	str	r3, [r4, #0]
 8000f26:	2e00      	cmp	r6, #0
 8000f28:	d001      	beq.n	8000f2e <_printf_i+0x176>
 8000f2a:	2710      	movs	r7, #16
 8000f2c:	e7aa      	b.n	8000e84 <_printf_i+0xcc>
 8000f2e:	2220      	movs	r2, #32
 8000f30:	6823      	ldr	r3, [r4, #0]
 8000f32:	4393      	bics	r3, r2
 8000f34:	6023      	str	r3, [r4, #0]
 8000f36:	e7f8      	b.n	8000f2a <_printf_i+0x172>
 8000f38:	681a      	ldr	r2, [r3, #0]
 8000f3a:	680d      	ldr	r5, [r1, #0]
 8000f3c:	1d10      	adds	r0, r2, #4
 8000f3e:	6949      	ldr	r1, [r1, #20]
 8000f40:	6018      	str	r0, [r3, #0]
 8000f42:	6813      	ldr	r3, [r2, #0]
 8000f44:	062e      	lsls	r6, r5, #24
 8000f46:	d501      	bpl.n	8000f4c <_printf_i+0x194>
 8000f48:	6019      	str	r1, [r3, #0]
 8000f4a:	e002      	b.n	8000f52 <_printf_i+0x19a>
 8000f4c:	066d      	lsls	r5, r5, #25
 8000f4e:	d5fb      	bpl.n	8000f48 <_printf_i+0x190>
 8000f50:	8019      	strh	r1, [r3, #0]
 8000f52:	2300      	movs	r3, #0
 8000f54:	9d03      	ldr	r5, [sp, #12]
 8000f56:	6123      	str	r3, [r4, #16]
 8000f58:	e7bf      	b.n	8000eda <_printf_i+0x122>
 8000f5a:	681a      	ldr	r2, [r3, #0]
 8000f5c:	1d11      	adds	r1, r2, #4
 8000f5e:	6019      	str	r1, [r3, #0]
 8000f60:	6815      	ldr	r5, [r2, #0]
 8000f62:	2100      	movs	r1, #0
 8000f64:	0028      	movs	r0, r5
 8000f66:	6862      	ldr	r2, [r4, #4]
 8000f68:	f000 f996 	bl	8001298 <memchr>
 8000f6c:	2800      	cmp	r0, #0
 8000f6e:	d001      	beq.n	8000f74 <_printf_i+0x1bc>
 8000f70:	1b40      	subs	r0, r0, r5
 8000f72:	6060      	str	r0, [r4, #4]
 8000f74:	6863      	ldr	r3, [r4, #4]
 8000f76:	6123      	str	r3, [r4, #16]
 8000f78:	2300      	movs	r3, #0
 8000f7a:	9a03      	ldr	r2, [sp, #12]
 8000f7c:	7013      	strb	r3, [r2, #0]
 8000f7e:	e7ac      	b.n	8000eda <_printf_i+0x122>
 8000f80:	002a      	movs	r2, r5
 8000f82:	6923      	ldr	r3, [r4, #16]
 8000f84:	9906      	ldr	r1, [sp, #24]
 8000f86:	9805      	ldr	r0, [sp, #20]
 8000f88:	9d07      	ldr	r5, [sp, #28]
 8000f8a:	47a8      	blx	r5
 8000f8c:	3001      	adds	r0, #1
 8000f8e:	d0ae      	beq.n	8000eee <_printf_i+0x136>
 8000f90:	6823      	ldr	r3, [r4, #0]
 8000f92:	079b      	lsls	r3, r3, #30
 8000f94:	d415      	bmi.n	8000fc2 <_printf_i+0x20a>
 8000f96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000f98:	68e0      	ldr	r0, [r4, #12]
 8000f9a:	4298      	cmp	r0, r3
 8000f9c:	daa9      	bge.n	8000ef2 <_printf_i+0x13a>
 8000f9e:	0018      	movs	r0, r3
 8000fa0:	e7a7      	b.n	8000ef2 <_printf_i+0x13a>
 8000fa2:	0022      	movs	r2, r4
 8000fa4:	2301      	movs	r3, #1
 8000fa6:	9906      	ldr	r1, [sp, #24]
 8000fa8:	9805      	ldr	r0, [sp, #20]
 8000faa:	9e07      	ldr	r6, [sp, #28]
 8000fac:	3219      	adds	r2, #25
 8000fae:	47b0      	blx	r6
 8000fb0:	3001      	adds	r0, #1
 8000fb2:	d09c      	beq.n	8000eee <_printf_i+0x136>
 8000fb4:	3501      	adds	r5, #1
 8000fb6:	68e3      	ldr	r3, [r4, #12]
 8000fb8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000fba:	1a9b      	subs	r3, r3, r2
 8000fbc:	42ab      	cmp	r3, r5
 8000fbe:	dcf0      	bgt.n	8000fa2 <_printf_i+0x1ea>
 8000fc0:	e7e9      	b.n	8000f96 <_printf_i+0x1de>
 8000fc2:	2500      	movs	r5, #0
 8000fc4:	e7f7      	b.n	8000fb6 <_printf_i+0x1fe>
 8000fc6:	46c0      	nop			@ (mov r8, r8)
 8000fc8:	08001401 	.word	0x08001401
 8000fcc:	08001412 	.word	0x08001412

08000fd0 <__sflush_r>:
 8000fd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000fd2:	220c      	movs	r2, #12
 8000fd4:	5e8b      	ldrsh	r3, [r1, r2]
 8000fd6:	0005      	movs	r5, r0
 8000fd8:	000c      	movs	r4, r1
 8000fda:	071a      	lsls	r2, r3, #28
 8000fdc:	d456      	bmi.n	800108c <__sflush_r+0xbc>
 8000fde:	684a      	ldr	r2, [r1, #4]
 8000fe0:	2a00      	cmp	r2, #0
 8000fe2:	dc02      	bgt.n	8000fea <__sflush_r+0x1a>
 8000fe4:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8000fe6:	2a00      	cmp	r2, #0
 8000fe8:	dd4e      	ble.n	8001088 <__sflush_r+0xb8>
 8000fea:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8000fec:	2f00      	cmp	r7, #0
 8000fee:	d04b      	beq.n	8001088 <__sflush_r+0xb8>
 8000ff0:	2200      	movs	r2, #0
 8000ff2:	2080      	movs	r0, #128	@ 0x80
 8000ff4:	682e      	ldr	r6, [r5, #0]
 8000ff6:	602a      	str	r2, [r5, #0]
 8000ff8:	001a      	movs	r2, r3
 8000ffa:	0140      	lsls	r0, r0, #5
 8000ffc:	6a21      	ldr	r1, [r4, #32]
 8000ffe:	4002      	ands	r2, r0
 8001000:	4203      	tst	r3, r0
 8001002:	d033      	beq.n	800106c <__sflush_r+0x9c>
 8001004:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001006:	89a3      	ldrh	r3, [r4, #12]
 8001008:	075b      	lsls	r3, r3, #29
 800100a:	d506      	bpl.n	800101a <__sflush_r+0x4a>
 800100c:	6863      	ldr	r3, [r4, #4]
 800100e:	1ad2      	subs	r2, r2, r3
 8001010:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001012:	2b00      	cmp	r3, #0
 8001014:	d001      	beq.n	800101a <__sflush_r+0x4a>
 8001016:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001018:	1ad2      	subs	r2, r2, r3
 800101a:	2300      	movs	r3, #0
 800101c:	0028      	movs	r0, r5
 800101e:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8001020:	6a21      	ldr	r1, [r4, #32]
 8001022:	47b8      	blx	r7
 8001024:	89a2      	ldrh	r2, [r4, #12]
 8001026:	1c43      	adds	r3, r0, #1
 8001028:	d106      	bne.n	8001038 <__sflush_r+0x68>
 800102a:	6829      	ldr	r1, [r5, #0]
 800102c:	291d      	cmp	r1, #29
 800102e:	d846      	bhi.n	80010be <__sflush_r+0xee>
 8001030:	4b29      	ldr	r3, [pc, #164]	@ (80010d8 <__sflush_r+0x108>)
 8001032:	40cb      	lsrs	r3, r1
 8001034:	07db      	lsls	r3, r3, #31
 8001036:	d542      	bpl.n	80010be <__sflush_r+0xee>
 8001038:	2300      	movs	r3, #0
 800103a:	6063      	str	r3, [r4, #4]
 800103c:	6923      	ldr	r3, [r4, #16]
 800103e:	6023      	str	r3, [r4, #0]
 8001040:	04d2      	lsls	r2, r2, #19
 8001042:	d505      	bpl.n	8001050 <__sflush_r+0x80>
 8001044:	1c43      	adds	r3, r0, #1
 8001046:	d102      	bne.n	800104e <__sflush_r+0x7e>
 8001048:	682b      	ldr	r3, [r5, #0]
 800104a:	2b00      	cmp	r3, #0
 800104c:	d100      	bne.n	8001050 <__sflush_r+0x80>
 800104e:	6560      	str	r0, [r4, #84]	@ 0x54
 8001050:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001052:	602e      	str	r6, [r5, #0]
 8001054:	2900      	cmp	r1, #0
 8001056:	d017      	beq.n	8001088 <__sflush_r+0xb8>
 8001058:	0023      	movs	r3, r4
 800105a:	3344      	adds	r3, #68	@ 0x44
 800105c:	4299      	cmp	r1, r3
 800105e:	d002      	beq.n	8001066 <__sflush_r+0x96>
 8001060:	0028      	movs	r0, r5
 8001062:	f7ff fbf9 	bl	8000858 <_free_r>
 8001066:	2300      	movs	r3, #0
 8001068:	6363      	str	r3, [r4, #52]	@ 0x34
 800106a:	e00d      	b.n	8001088 <__sflush_r+0xb8>
 800106c:	2301      	movs	r3, #1
 800106e:	0028      	movs	r0, r5
 8001070:	47b8      	blx	r7
 8001072:	0002      	movs	r2, r0
 8001074:	1c43      	adds	r3, r0, #1
 8001076:	d1c6      	bne.n	8001006 <__sflush_r+0x36>
 8001078:	682b      	ldr	r3, [r5, #0]
 800107a:	2b00      	cmp	r3, #0
 800107c:	d0c3      	beq.n	8001006 <__sflush_r+0x36>
 800107e:	2b1d      	cmp	r3, #29
 8001080:	d001      	beq.n	8001086 <__sflush_r+0xb6>
 8001082:	2b16      	cmp	r3, #22
 8001084:	d11a      	bne.n	80010bc <__sflush_r+0xec>
 8001086:	602e      	str	r6, [r5, #0]
 8001088:	2000      	movs	r0, #0
 800108a:	e01e      	b.n	80010ca <__sflush_r+0xfa>
 800108c:	690e      	ldr	r6, [r1, #16]
 800108e:	2e00      	cmp	r6, #0
 8001090:	d0fa      	beq.n	8001088 <__sflush_r+0xb8>
 8001092:	680f      	ldr	r7, [r1, #0]
 8001094:	600e      	str	r6, [r1, #0]
 8001096:	1bba      	subs	r2, r7, r6
 8001098:	9201      	str	r2, [sp, #4]
 800109a:	2200      	movs	r2, #0
 800109c:	079b      	lsls	r3, r3, #30
 800109e:	d100      	bne.n	80010a2 <__sflush_r+0xd2>
 80010a0:	694a      	ldr	r2, [r1, #20]
 80010a2:	60a2      	str	r2, [r4, #8]
 80010a4:	9b01      	ldr	r3, [sp, #4]
 80010a6:	2b00      	cmp	r3, #0
 80010a8:	ddee      	ble.n	8001088 <__sflush_r+0xb8>
 80010aa:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80010ac:	0032      	movs	r2, r6
 80010ae:	001f      	movs	r7, r3
 80010b0:	0028      	movs	r0, r5
 80010b2:	9b01      	ldr	r3, [sp, #4]
 80010b4:	6a21      	ldr	r1, [r4, #32]
 80010b6:	47b8      	blx	r7
 80010b8:	2800      	cmp	r0, #0
 80010ba:	dc07      	bgt.n	80010cc <__sflush_r+0xfc>
 80010bc:	89a2      	ldrh	r2, [r4, #12]
 80010be:	2340      	movs	r3, #64	@ 0x40
 80010c0:	2001      	movs	r0, #1
 80010c2:	4313      	orrs	r3, r2
 80010c4:	b21b      	sxth	r3, r3
 80010c6:	81a3      	strh	r3, [r4, #12]
 80010c8:	4240      	negs	r0, r0
 80010ca:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80010cc:	9b01      	ldr	r3, [sp, #4]
 80010ce:	1836      	adds	r6, r6, r0
 80010d0:	1a1b      	subs	r3, r3, r0
 80010d2:	9301      	str	r3, [sp, #4]
 80010d4:	e7e6      	b.n	80010a4 <__sflush_r+0xd4>
 80010d6:	46c0      	nop			@ (mov r8, r8)
 80010d8:	20400001 	.word	0x20400001

080010dc <_fflush_r>:
 80010dc:	690b      	ldr	r3, [r1, #16]
 80010de:	b570      	push	{r4, r5, r6, lr}
 80010e0:	0005      	movs	r5, r0
 80010e2:	000c      	movs	r4, r1
 80010e4:	2b00      	cmp	r3, #0
 80010e6:	d102      	bne.n	80010ee <_fflush_r+0x12>
 80010e8:	2500      	movs	r5, #0
 80010ea:	0028      	movs	r0, r5
 80010ec:	bd70      	pop	{r4, r5, r6, pc}
 80010ee:	2800      	cmp	r0, #0
 80010f0:	d004      	beq.n	80010fc <_fflush_r+0x20>
 80010f2:	6a03      	ldr	r3, [r0, #32]
 80010f4:	2b00      	cmp	r3, #0
 80010f6:	d101      	bne.n	80010fc <_fflush_r+0x20>
 80010f8:	f7ff fa9a 	bl	8000630 <__sinit>
 80010fc:	220c      	movs	r2, #12
 80010fe:	5ea3      	ldrsh	r3, [r4, r2]
 8001100:	2b00      	cmp	r3, #0
 8001102:	d0f1      	beq.n	80010e8 <_fflush_r+0xc>
 8001104:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001106:	07d2      	lsls	r2, r2, #31
 8001108:	d404      	bmi.n	8001114 <_fflush_r+0x38>
 800110a:	059b      	lsls	r3, r3, #22
 800110c:	d402      	bmi.n	8001114 <_fflush_r+0x38>
 800110e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001110:	f7ff fb9f 	bl	8000852 <__retarget_lock_acquire_recursive>
 8001114:	0028      	movs	r0, r5
 8001116:	0021      	movs	r1, r4
 8001118:	f7ff ff5a 	bl	8000fd0 <__sflush_r>
 800111c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800111e:	0005      	movs	r5, r0
 8001120:	07db      	lsls	r3, r3, #31
 8001122:	d4e2      	bmi.n	80010ea <_fflush_r+0xe>
 8001124:	89a3      	ldrh	r3, [r4, #12]
 8001126:	059b      	lsls	r3, r3, #22
 8001128:	d4df      	bmi.n	80010ea <_fflush_r+0xe>
 800112a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800112c:	f7ff fb92 	bl	8000854 <__retarget_lock_release_recursive>
 8001130:	e7db      	b.n	80010ea <_fflush_r+0xe>

08001132 <__swbuf_r>:
 8001132:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001134:	0006      	movs	r6, r0
 8001136:	000d      	movs	r5, r1
 8001138:	0014      	movs	r4, r2
 800113a:	2800      	cmp	r0, #0
 800113c:	d004      	beq.n	8001148 <__swbuf_r+0x16>
 800113e:	6a03      	ldr	r3, [r0, #32]
 8001140:	2b00      	cmp	r3, #0
 8001142:	d101      	bne.n	8001148 <__swbuf_r+0x16>
 8001144:	f7ff fa74 	bl	8000630 <__sinit>
 8001148:	69a3      	ldr	r3, [r4, #24]
 800114a:	60a3      	str	r3, [r4, #8]
 800114c:	89a3      	ldrh	r3, [r4, #12]
 800114e:	071b      	lsls	r3, r3, #28
 8001150:	d502      	bpl.n	8001158 <__swbuf_r+0x26>
 8001152:	6923      	ldr	r3, [r4, #16]
 8001154:	2b00      	cmp	r3, #0
 8001156:	d109      	bne.n	800116c <__swbuf_r+0x3a>
 8001158:	0021      	movs	r1, r4
 800115a:	0030      	movs	r0, r6
 800115c:	f000 f82c 	bl	80011b8 <__swsetup_r>
 8001160:	2800      	cmp	r0, #0
 8001162:	d003      	beq.n	800116c <__swbuf_r+0x3a>
 8001164:	2501      	movs	r5, #1
 8001166:	426d      	negs	r5, r5
 8001168:	0028      	movs	r0, r5
 800116a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800116c:	6923      	ldr	r3, [r4, #16]
 800116e:	6820      	ldr	r0, [r4, #0]
 8001170:	b2ef      	uxtb	r7, r5
 8001172:	1ac0      	subs	r0, r0, r3
 8001174:	6963      	ldr	r3, [r4, #20]
 8001176:	b2ed      	uxtb	r5, r5
 8001178:	4283      	cmp	r3, r0
 800117a:	dc05      	bgt.n	8001188 <__swbuf_r+0x56>
 800117c:	0021      	movs	r1, r4
 800117e:	0030      	movs	r0, r6
 8001180:	f7ff ffac 	bl	80010dc <_fflush_r>
 8001184:	2800      	cmp	r0, #0
 8001186:	d1ed      	bne.n	8001164 <__swbuf_r+0x32>
 8001188:	68a3      	ldr	r3, [r4, #8]
 800118a:	3001      	adds	r0, #1
 800118c:	3b01      	subs	r3, #1
 800118e:	60a3      	str	r3, [r4, #8]
 8001190:	6823      	ldr	r3, [r4, #0]
 8001192:	1c5a      	adds	r2, r3, #1
 8001194:	6022      	str	r2, [r4, #0]
 8001196:	701f      	strb	r7, [r3, #0]
 8001198:	6963      	ldr	r3, [r4, #20]
 800119a:	4283      	cmp	r3, r0
 800119c:	d004      	beq.n	80011a8 <__swbuf_r+0x76>
 800119e:	89a3      	ldrh	r3, [r4, #12]
 80011a0:	07db      	lsls	r3, r3, #31
 80011a2:	d5e1      	bpl.n	8001168 <__swbuf_r+0x36>
 80011a4:	2d0a      	cmp	r5, #10
 80011a6:	d1df      	bne.n	8001168 <__swbuf_r+0x36>
 80011a8:	0021      	movs	r1, r4
 80011aa:	0030      	movs	r0, r6
 80011ac:	f7ff ff96 	bl	80010dc <_fflush_r>
 80011b0:	2800      	cmp	r0, #0
 80011b2:	d0d9      	beq.n	8001168 <__swbuf_r+0x36>
 80011b4:	e7d6      	b.n	8001164 <__swbuf_r+0x32>
	...

080011b8 <__swsetup_r>:
 80011b8:	4b2d      	ldr	r3, [pc, #180]	@ (8001270 <__swsetup_r+0xb8>)
 80011ba:	b570      	push	{r4, r5, r6, lr}
 80011bc:	0005      	movs	r5, r0
 80011be:	6818      	ldr	r0, [r3, #0]
 80011c0:	000c      	movs	r4, r1
 80011c2:	2800      	cmp	r0, #0
 80011c4:	d004      	beq.n	80011d0 <__swsetup_r+0x18>
 80011c6:	6a03      	ldr	r3, [r0, #32]
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d101      	bne.n	80011d0 <__swsetup_r+0x18>
 80011cc:	f7ff fa30 	bl	8000630 <__sinit>
 80011d0:	220c      	movs	r2, #12
 80011d2:	5ea3      	ldrsh	r3, [r4, r2]
 80011d4:	071a      	lsls	r2, r3, #28
 80011d6:	d423      	bmi.n	8001220 <__swsetup_r+0x68>
 80011d8:	06da      	lsls	r2, r3, #27
 80011da:	d407      	bmi.n	80011ec <__swsetup_r+0x34>
 80011dc:	2209      	movs	r2, #9
 80011de:	602a      	str	r2, [r5, #0]
 80011e0:	2240      	movs	r2, #64	@ 0x40
 80011e2:	2001      	movs	r0, #1
 80011e4:	4313      	orrs	r3, r2
 80011e6:	81a3      	strh	r3, [r4, #12]
 80011e8:	4240      	negs	r0, r0
 80011ea:	e03a      	b.n	8001262 <__swsetup_r+0xaa>
 80011ec:	075b      	lsls	r3, r3, #29
 80011ee:	d513      	bpl.n	8001218 <__swsetup_r+0x60>
 80011f0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80011f2:	2900      	cmp	r1, #0
 80011f4:	d008      	beq.n	8001208 <__swsetup_r+0x50>
 80011f6:	0023      	movs	r3, r4
 80011f8:	3344      	adds	r3, #68	@ 0x44
 80011fa:	4299      	cmp	r1, r3
 80011fc:	d002      	beq.n	8001204 <__swsetup_r+0x4c>
 80011fe:	0028      	movs	r0, r5
 8001200:	f7ff fb2a 	bl	8000858 <_free_r>
 8001204:	2300      	movs	r3, #0
 8001206:	6363      	str	r3, [r4, #52]	@ 0x34
 8001208:	2224      	movs	r2, #36	@ 0x24
 800120a:	89a3      	ldrh	r3, [r4, #12]
 800120c:	4393      	bics	r3, r2
 800120e:	81a3      	strh	r3, [r4, #12]
 8001210:	2300      	movs	r3, #0
 8001212:	6063      	str	r3, [r4, #4]
 8001214:	6923      	ldr	r3, [r4, #16]
 8001216:	6023      	str	r3, [r4, #0]
 8001218:	2308      	movs	r3, #8
 800121a:	89a2      	ldrh	r2, [r4, #12]
 800121c:	4313      	orrs	r3, r2
 800121e:	81a3      	strh	r3, [r4, #12]
 8001220:	6923      	ldr	r3, [r4, #16]
 8001222:	2b00      	cmp	r3, #0
 8001224:	d10b      	bne.n	800123e <__swsetup_r+0x86>
 8001226:	21a0      	movs	r1, #160	@ 0xa0
 8001228:	2280      	movs	r2, #128	@ 0x80
 800122a:	89a3      	ldrh	r3, [r4, #12]
 800122c:	0089      	lsls	r1, r1, #2
 800122e:	0092      	lsls	r2, r2, #2
 8001230:	400b      	ands	r3, r1
 8001232:	4293      	cmp	r3, r2
 8001234:	d003      	beq.n	800123e <__swsetup_r+0x86>
 8001236:	0021      	movs	r1, r4
 8001238:	0028      	movs	r0, r5
 800123a:	f000 f863 	bl	8001304 <__smakebuf_r>
 800123e:	220c      	movs	r2, #12
 8001240:	5ea3      	ldrsh	r3, [r4, r2]
 8001242:	2101      	movs	r1, #1
 8001244:	001a      	movs	r2, r3
 8001246:	400a      	ands	r2, r1
 8001248:	420b      	tst	r3, r1
 800124a:	d00b      	beq.n	8001264 <__swsetup_r+0xac>
 800124c:	2200      	movs	r2, #0
 800124e:	60a2      	str	r2, [r4, #8]
 8001250:	6962      	ldr	r2, [r4, #20]
 8001252:	4252      	negs	r2, r2
 8001254:	61a2      	str	r2, [r4, #24]
 8001256:	2000      	movs	r0, #0
 8001258:	6922      	ldr	r2, [r4, #16]
 800125a:	4282      	cmp	r2, r0
 800125c:	d101      	bne.n	8001262 <__swsetup_r+0xaa>
 800125e:	061a      	lsls	r2, r3, #24
 8001260:	d4be      	bmi.n	80011e0 <__swsetup_r+0x28>
 8001262:	bd70      	pop	{r4, r5, r6, pc}
 8001264:	0799      	lsls	r1, r3, #30
 8001266:	d400      	bmi.n	800126a <__swsetup_r+0xb2>
 8001268:	6962      	ldr	r2, [r4, #20]
 800126a:	60a2      	str	r2, [r4, #8]
 800126c:	e7f3      	b.n	8001256 <__swsetup_r+0x9e>
 800126e:	46c0      	nop			@ (mov r8, r8)
 8001270:	2000000c 	.word	0x2000000c

08001274 <_sbrk_r>:
 8001274:	2300      	movs	r3, #0
 8001276:	b570      	push	{r4, r5, r6, lr}
 8001278:	4d06      	ldr	r5, [pc, #24]	@ (8001294 <_sbrk_r+0x20>)
 800127a:	0004      	movs	r4, r0
 800127c:	0008      	movs	r0, r1
 800127e:	602b      	str	r3, [r5, #0]
 8001280:	f7ff f844 	bl	800030c <_sbrk>
 8001284:	1c43      	adds	r3, r0, #1
 8001286:	d103      	bne.n	8001290 <_sbrk_r+0x1c>
 8001288:	682b      	ldr	r3, [r5, #0]
 800128a:	2b00      	cmp	r3, #0
 800128c:	d000      	beq.n	8001290 <_sbrk_r+0x1c>
 800128e:	6023      	str	r3, [r4, #0]
 8001290:	bd70      	pop	{r4, r5, r6, pc}
 8001292:	46c0      	nop			@ (mov r8, r8)
 8001294:	200001b8 	.word	0x200001b8

08001298 <memchr>:
 8001298:	b2c9      	uxtb	r1, r1
 800129a:	1882      	adds	r2, r0, r2
 800129c:	4290      	cmp	r0, r2
 800129e:	d101      	bne.n	80012a4 <memchr+0xc>
 80012a0:	2000      	movs	r0, #0
 80012a2:	4770      	bx	lr
 80012a4:	7803      	ldrb	r3, [r0, #0]
 80012a6:	428b      	cmp	r3, r1
 80012a8:	d0fb      	beq.n	80012a2 <memchr+0xa>
 80012aa:	3001      	adds	r0, #1
 80012ac:	e7f6      	b.n	800129c <memchr+0x4>
	...

080012b0 <__swhatbuf_r>:
 80012b0:	b570      	push	{r4, r5, r6, lr}
 80012b2:	000e      	movs	r6, r1
 80012b4:	001d      	movs	r5, r3
 80012b6:	230e      	movs	r3, #14
 80012b8:	5ec9      	ldrsh	r1, [r1, r3]
 80012ba:	0014      	movs	r4, r2
 80012bc:	b096      	sub	sp, #88	@ 0x58
 80012be:	2900      	cmp	r1, #0
 80012c0:	da0c      	bge.n	80012dc <__swhatbuf_r+0x2c>
 80012c2:	89b2      	ldrh	r2, [r6, #12]
 80012c4:	2380      	movs	r3, #128	@ 0x80
 80012c6:	0011      	movs	r1, r2
 80012c8:	4019      	ands	r1, r3
 80012ca:	421a      	tst	r2, r3
 80012cc:	d114      	bne.n	80012f8 <__swhatbuf_r+0x48>
 80012ce:	2380      	movs	r3, #128	@ 0x80
 80012d0:	00db      	lsls	r3, r3, #3
 80012d2:	2000      	movs	r0, #0
 80012d4:	6029      	str	r1, [r5, #0]
 80012d6:	6023      	str	r3, [r4, #0]
 80012d8:	b016      	add	sp, #88	@ 0x58
 80012da:	bd70      	pop	{r4, r5, r6, pc}
 80012dc:	466a      	mov	r2, sp
 80012de:	f000 f853 	bl	8001388 <_fstat_r>
 80012e2:	2800      	cmp	r0, #0
 80012e4:	dbed      	blt.n	80012c2 <__swhatbuf_r+0x12>
 80012e6:	23f0      	movs	r3, #240	@ 0xf0
 80012e8:	9901      	ldr	r1, [sp, #4]
 80012ea:	021b      	lsls	r3, r3, #8
 80012ec:	4019      	ands	r1, r3
 80012ee:	4b04      	ldr	r3, [pc, #16]	@ (8001300 <__swhatbuf_r+0x50>)
 80012f0:	18c9      	adds	r1, r1, r3
 80012f2:	424b      	negs	r3, r1
 80012f4:	4159      	adcs	r1, r3
 80012f6:	e7ea      	b.n	80012ce <__swhatbuf_r+0x1e>
 80012f8:	2100      	movs	r1, #0
 80012fa:	2340      	movs	r3, #64	@ 0x40
 80012fc:	e7e9      	b.n	80012d2 <__swhatbuf_r+0x22>
 80012fe:	46c0      	nop			@ (mov r8, r8)
 8001300:	ffffe000 	.word	0xffffe000

08001304 <__smakebuf_r>:
 8001304:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001306:	2602      	movs	r6, #2
 8001308:	898b      	ldrh	r3, [r1, #12]
 800130a:	0005      	movs	r5, r0
 800130c:	000c      	movs	r4, r1
 800130e:	b085      	sub	sp, #20
 8001310:	4233      	tst	r3, r6
 8001312:	d007      	beq.n	8001324 <__smakebuf_r+0x20>
 8001314:	0023      	movs	r3, r4
 8001316:	3347      	adds	r3, #71	@ 0x47
 8001318:	6023      	str	r3, [r4, #0]
 800131a:	6123      	str	r3, [r4, #16]
 800131c:	2301      	movs	r3, #1
 800131e:	6163      	str	r3, [r4, #20]
 8001320:	b005      	add	sp, #20
 8001322:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001324:	ab03      	add	r3, sp, #12
 8001326:	aa02      	add	r2, sp, #8
 8001328:	f7ff ffc2 	bl	80012b0 <__swhatbuf_r>
 800132c:	9f02      	ldr	r7, [sp, #8]
 800132e:	9001      	str	r0, [sp, #4]
 8001330:	0039      	movs	r1, r7
 8001332:	0028      	movs	r0, r5
 8001334:	f7ff fafc 	bl	8000930 <_malloc_r>
 8001338:	2800      	cmp	r0, #0
 800133a:	d108      	bne.n	800134e <__smakebuf_r+0x4a>
 800133c:	220c      	movs	r2, #12
 800133e:	5ea3      	ldrsh	r3, [r4, r2]
 8001340:	059a      	lsls	r2, r3, #22
 8001342:	d4ed      	bmi.n	8001320 <__smakebuf_r+0x1c>
 8001344:	2203      	movs	r2, #3
 8001346:	4393      	bics	r3, r2
 8001348:	431e      	orrs	r6, r3
 800134a:	81a6      	strh	r6, [r4, #12]
 800134c:	e7e2      	b.n	8001314 <__smakebuf_r+0x10>
 800134e:	2380      	movs	r3, #128	@ 0x80
 8001350:	89a2      	ldrh	r2, [r4, #12]
 8001352:	6020      	str	r0, [r4, #0]
 8001354:	4313      	orrs	r3, r2
 8001356:	81a3      	strh	r3, [r4, #12]
 8001358:	9b03      	ldr	r3, [sp, #12]
 800135a:	6120      	str	r0, [r4, #16]
 800135c:	6167      	str	r7, [r4, #20]
 800135e:	2b00      	cmp	r3, #0
 8001360:	d00c      	beq.n	800137c <__smakebuf_r+0x78>
 8001362:	0028      	movs	r0, r5
 8001364:	230e      	movs	r3, #14
 8001366:	5ee1      	ldrsh	r1, [r4, r3]
 8001368:	f000 f820 	bl	80013ac <_isatty_r>
 800136c:	2800      	cmp	r0, #0
 800136e:	d005      	beq.n	800137c <__smakebuf_r+0x78>
 8001370:	2303      	movs	r3, #3
 8001372:	89a2      	ldrh	r2, [r4, #12]
 8001374:	439a      	bics	r2, r3
 8001376:	3b02      	subs	r3, #2
 8001378:	4313      	orrs	r3, r2
 800137a:	81a3      	strh	r3, [r4, #12]
 800137c:	89a3      	ldrh	r3, [r4, #12]
 800137e:	9a01      	ldr	r2, [sp, #4]
 8001380:	4313      	orrs	r3, r2
 8001382:	81a3      	strh	r3, [r4, #12]
 8001384:	e7cc      	b.n	8001320 <__smakebuf_r+0x1c>
	...

08001388 <_fstat_r>:
 8001388:	2300      	movs	r3, #0
 800138a:	b570      	push	{r4, r5, r6, lr}
 800138c:	4d06      	ldr	r5, [pc, #24]	@ (80013a8 <_fstat_r+0x20>)
 800138e:	0004      	movs	r4, r0
 8001390:	0008      	movs	r0, r1
 8001392:	0011      	movs	r1, r2
 8001394:	602b      	str	r3, [r5, #0]
 8001396:	f7fe ff96 	bl	80002c6 <_fstat>
 800139a:	1c43      	adds	r3, r0, #1
 800139c:	d103      	bne.n	80013a6 <_fstat_r+0x1e>
 800139e:	682b      	ldr	r3, [r5, #0]
 80013a0:	2b00      	cmp	r3, #0
 80013a2:	d000      	beq.n	80013a6 <_fstat_r+0x1e>
 80013a4:	6023      	str	r3, [r4, #0]
 80013a6:	bd70      	pop	{r4, r5, r6, pc}
 80013a8:	200001b8 	.word	0x200001b8

080013ac <_isatty_r>:
 80013ac:	2300      	movs	r3, #0
 80013ae:	b570      	push	{r4, r5, r6, lr}
 80013b0:	4d06      	ldr	r5, [pc, #24]	@ (80013cc <_isatty_r+0x20>)
 80013b2:	0004      	movs	r4, r0
 80013b4:	0008      	movs	r0, r1
 80013b6:	602b      	str	r3, [r5, #0]
 80013b8:	f7fe ff93 	bl	80002e2 <_isatty>
 80013bc:	1c43      	adds	r3, r0, #1
 80013be:	d103      	bne.n	80013c8 <_isatty_r+0x1c>
 80013c0:	682b      	ldr	r3, [r5, #0]
 80013c2:	2b00      	cmp	r3, #0
 80013c4:	d000      	beq.n	80013c8 <_isatty_r+0x1c>
 80013c6:	6023      	str	r3, [r4, #0]
 80013c8:	bd70      	pop	{r4, r5, r6, pc}
 80013ca:	46c0      	nop			@ (mov r8, r8)
 80013cc:	200001b8 	.word	0x200001b8

080013d0 <_init>:
 80013d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013d2:	46c0      	nop			@ (mov r8, r8)
 80013d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013d6:	bc08      	pop	{r3}
 80013d8:	469e      	mov	lr, r3
 80013da:	4770      	bx	lr

080013dc <_fini>:
 80013dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013de:	46c0      	nop			@ (mov r8, r8)
 80013e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013e2:	bc08      	pop	{r3}
 80013e4:	469e      	mov	lr, r3
 80013e6:	4770      	bx	lr
